---
http_interactions:
- request:
    method: get
    uri: https://plantmicroservice.herokuapp.com/allplants
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: 'OK '
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Content-Length:
      - '54530'
      X-Content-Type-Options:
      - nosniff
      Server:
      - WEBrick/1.4.2 (Ruby/2.6.6/2020-03-31)
      Date:
      - Mon, 13 Apr 2020 21:50:25 GMT
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        W3sibmFtZSI6InRvbWF0byIsImRlc2NyaXB0aW9uIjoiVGhlIHRvbWF0byBpcyB0aGUgZnJ1aXQgb2YgdGhlIHRvbWF0byBwbGFudCwgYSBtZW1iZXIgb2YgdGhlIE5pZ2h0c2hhZGUgZmFtaWx5IChTb2xhbmFjZWFlKS4gVGhlIGZydWl0IGdyb3dzIG9uIGEgc3ByYXdsaW5nIHZpbmUgdGhhdCBpcyBvZnRlbiB0cmVsbGlzZWQgb3IgY2FnZWQgdG8ga2VlcCBpdCB1cHJpZ2h0LiBUaGVyZSBhcmUgbWFueSBraW5kcyBvZiB0b21hdG9lcywgaW5jbHVkaW5nIGNvbnZlbnRpb25hbCwgaHlicmlkLCBoZWlybG9vbSwgcGx1bSwgZ3JhcGUsIGFuZCBjaGVycnkuIERldGVybWluYXRlIG9yIGJ1c2ggdmFyaWV0aWVzIGRvIG5vdCBuZWVkIHBydW5pbmcgYW5kIGNhbiBiZSBncm93biB3aXRob3V0IHRyZWxsaXNlcyBvciBjYWdlcy4gSW5kZXRlcm1pbmF0ZSBvciBjbGltYmluZyB2YXJpZXRpZXMgYmVuZWZpdCBmcm9tIHBydW5pbmcgYW5kIHNob3VsZCBiZSB0cmVsbGlzZWQsIGNhZ2VkLCBvciBzdGFrZWQuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzVkYzM2MThlZjJjMTAyMDAwNGY5MzZlNC5qcGc/MTU3MzA4NTU4MCJ9LHsibmFtZSI6ImxldHR1Y2UiLCJkZXNjcmlwdGlvbiI6IkxldHR1Y2UgaXMgYSBjb29sIHdlYXRoZXIgY3JvcCBhbmQgaGlnaCB0ZW1wZXJhdHVyZXMgd2lsbCBpbXBlZGUgZ2VybWluYXRpb24gYW5kL29yIGNhdXNlIHRoZSBwbGFudCB0byBib2x0IChnbyB0byBzZWVkIHF1aWNrbHkpLiBTb21lIGh5YnJpZCBjdWx0aXZhcnMgaGF2ZSBiZWVuIGJyZWQgdG8gYmUgbW9yZSBoZWF0LXJlc2lzdGFudC4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDkyMTAyODkzMDhfODAwMTNiNjIxZF96LmpwZyJ9LHsibmFtZSI6ImJhc2lsIiwiZGVzY3JpcHRpb24iOiJGcmFncmFudCBhbmQgZGVsaWNpb3VzIGhlcmIgd2l0aCB0ZW5kZXIgZ3JlZW4gbGVhdmVzLiBHcmVhdCBpbiBqdXN0IGFib3V0IGFueXRoaW5nIC0gc2FsYWQsIHNhdWNlcywgbWVhdCBtYXJpbmFkZXMsIGFuZCBldmVuIHBvcGNvcm4uIiwiaW1hZ2UiOiJodHRwczovL2Zhcm04LnN0YXRpY2ZsaWNrci5jb20vNzE3MC82NzM0NjEwNjM3XzU5ODYwYWJmOGVfei5qcGcifSx7Im5hbWUiOiJjYXJyb3QiLCJkZXNjcmlwdGlvbiI6IlRoZSBjYXJyb3QgaXMgYSByb290IHZlZ2V0YWJsZS4gSXQgaXMgdXN1YWxseSBvcmFuZ2UgaW4gY29sb3IsIGJ1dCBzb21lIGN1bHRpdmFycyBhcmUgcHVycGxlLCBibGFjaywgcmVkLCB3aGl0ZSwgYW5kIHllbGxvdy4gVGhlIG1vc3QgY29tbW9ubHkgZWF0ZW4gcGFydCBvZiB0aGUgcGxhbnQgaXMgdGhlIHRhcHJvb3QsIGJ1dCB0aGUgZ3JlZW5zIGFyZSBzb21ldGltZXMgZWF0ZW4gYXMgd2VsbC4gVGhlIGxlYXZlcyBhcHBlYXIgZmlyc3QsIGFuZCB0aGUgdGFwcm9vdCBncm93cyBtb3JlIHNsb3dseSBiZW5lYXRoIHRoZSBzb2lsLiBGYXN0LWdyb3dpbmcgY3VsdGl2YXJzIG1hdHVyZSB3aXRoaW4gdGhyZWUgbW9udGhzIG9mIHNvd2luZyB0aGUgc2VlZC4gU2xvd2VyLW1hdHVyaW5nIGN1bHRpdmFycyBhcmUgaGFydmVzdGVkIGZvdXIgbW9udGhzIGFmdGVyIHNvd2luZy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTEuc3RhdGljZmxpY2tyLmNvbS8yOTgvMzI4OTM2MjA2MjVfNDI2MmVlYjVjMl96LmpwZyJ9LHsibmFtZSI6ImNvcmlhbmRlciIsImRlc2NyaXB0aW9uIjoiQ29yaWFuZGVyIGlzIHRoZSBFbmdsaXNoIChVSykgbmFtZSBmb3IgQ2lsYW50cm8uIEluIEFtZXJpY2EsIENvcmlhbmRlciBpcyB1c2VkIHRvIHJlZmVyIHRvIHRoZSBkcmllZCByb3VuZCBzZWVkcyBvZiB0aGUgQ2lsYW50cm8gcGxhbnQsIHdoaWNoIGhhdmUgYSB3YXJtLCBzcGljeSBmbGF2b3IgYW5kIGFyZSB1c2VkIGluIGN1cnJpZXMsIHBpY2tsZXMsIHNhdXNhZ2VzLCBzb3VwcywgYW5kIHN0ZXdzLiBUaGUgZXNzZW50aWFsIG9pbCBvZiB0aGUgc2VlZHMgaXMgdXNlZCBpbiBoZXJiYWwgcmVtZWRpZXMgYW5kIGRpZXRhcnkgc3VwcGxlbWVudHMsIGFuZCB0byBmbGF2b3IgbGlxdWV1cnMsIGdpbiwgdmVybW91dGgsIHRvYmFjY28sIGFuZCBwZXJmdW1lcy4gQ2lsYW50cm8gaXMgYW4gYW5udWFsIGhlcmIgaW4gdGhlIEFwaWFjZWFlIGZhbWlseSB3aXRoIHNvZnQgbGVhdmVzIHRoYXQgYXJlIGJyb2FkbHkgbG9iZWQgYXQgdGhlIGJhc2Ugb2YgdGhlIHBsYW50IGFuZCBiZWNvbWUgc2xlbmRlciBhbmQgZmVhdGhlcnkgaGlnaGVyIHVwIHRoZSBzdGVtcy4gVGhlIGxlYXZlcyB3aWxsIGJlIHJlYWR5IHRvIGhhcnZlc3Qgd2l0aGluIDUwLTU1IGRheXMsIHRoZSBzZWVkcyB0YWtlIHVwIHRvIDEwMCBkYXlzIHRvIG1hdHVyZSBhbmQgdGhlbiBuZWVkIHRvIGJlIGRyaWVkLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80OTA2NTY4MDExNl81OTc4ZDMxMzE4X3ouanBnIn0seyJuYW1lIjoiY3VjdW1iZXIiLCJkZXNjcmlwdGlvbiI6IkN1Y3VtYmVycyBhcmUgdGhlIGZydWl0IG9mIGEgY3JlZXBpbmcgdmluZS4gVGhleSBhcmUgZ2VuZXJhbGx5IG9ibG9uZyBhbmQgaGF2ZSBhIGhpZ2ggd2F0ZXIgY29udGVudC4gVGhlaXIgZWRpYmxlIHNraW4gaXMgb2Z0ZW4gZ3JlZW4gYnV0IGNhbiBhbHNvIGJlIHllbGxvdywgd2hpdGUsIG9yIHN0cmlwZWQuIFxuXG5UaGUgdmluZSBjYW4gYmUgbGVmdCB0byBzcHJlYWQgYWxvbmcgdGhlIGdyb3VuZCwgb3IgaXQgY2FuIGJlIHRyYWluZWQgdG8gYSB0cmVsbGlzLiBUaGUgdmluZSdzIGxhcmdlIGxlYXZlcyBoaWRlIHRoZSBjdWN1bWJlcnMgYW5kIHNoYWRlIHRoZW0uIFRoZXJlIGFyZSB0aHJlZSBtYWluIHZhcmlldGllcyBvZiBjdWN1bWJlcjogc2xpY2luZywgcGlja2xpbmcsIGFuZCBzZWVkbGVzcy4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNTc2Yjc4NDlmZThkNzUwMDAzMDAwMzA3LmpwZz8xNDY2NjYwOTM2In0seyJuYW1lIjoicm9zZW1hcnkiLCJkZXNjcmlwdGlvbiI6IlJvc21hcmludXMgb2ZmaWNpbmFsaXMsIGNvbW1vbmx5IGtub3duIGFzIHJvc2VtYXJ5LCBpcyBhIHdvb2R5LCBwZXJlbm5pYWwgaGVyYiB3aXRoIGZyYWdyYW50LCBldmVyZ3JlZW4sIG5lZWRsZS1saWtlIGxlYXZlcyBhbmQgd2hpdGUsIHBpbmssIHB1cnBsZSwgb3IgYmx1ZSBmbG93ZXJzLCBuYXRpdmUgdG8gdGhlIE1lZGl0ZXJyYW5lYW4gcmVnaW9uLlxuSXQgaXMgYSBtZW1iZXIgb2YgdGhlIG1pbnQgZmFtaWx5IExhbWlhY2VhZSwgd2hpY2ggaW5jbHVkZXMgbWFueSBvdGhlciBoZXJicy4gVGhlIG5hbWUgXCJyb3NlbWFyeVwiIGRlcml2ZXMgZnJvbSB0aGUgTGF0aW4gZm9yIFwiZGV3XCIgKHJvcykgYW5kIFwic2VhXCIgKG1hcmludXMpLCBvciBcImRldyBvZiB0aGUgc2VhXCIuIFRoZSBwbGFudCBpcyBhbHNvIHNvbWV0aW1lcyBjYWxsZWQgJ2FudGhvcycsIGZyb20gdGhlIGFuY2llbnQgR3JlZWsgd29yZCDhvITOvc64zr/PgiwgbWVhbmluZyBcImZsb3dlclwiLiBSb3NlbWFyeSBoYXMgYSBmaWJyb3VzIHJvb3Qgc3lzdGVtLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGUzMmMzZDRiY2E2ZjAwMDQwMDAwMDYuanBnPzE0OTEyODMwMDMifSx7Im5hbWUiOiJzdHJhd2JlcnJ5IiwiZGVzY3JpcHRpb24iOiJTdHJhd2JlcnJpZXMgYXJlIGEgaHlicmlkIHNwZWNpZXMgb2YgdGhlIGdlbnVzIEZyYWdhcmlhIHRoYXQgcHJvZHVjZSBzd2VldCwgYnJpZ2h0IHJlZCBmcnVpdHMuIFxuXG5UaGVyZSBhcmUgdGhyZWUgbWFpbiB0eXBlcyBvZiBzdHJhd2JlcnJpZXM6IFxuXG4xKSBzdW1tZXItZnJ1aXRpbmc6IHByb2R1Y2UgYSBzaW5nbGUsIGxhcmdlIGNyb3Agb2YgZnJ1aXQgdGhlIHllYXIgYWZ0ZXIgcGxhbnRpbmcuIFRvIGdyb3csIHRyYW5zcGxhbnQgcGx1Z3Mgb3IgY3Jvd25zIGluIGVhcmx5IHNwcmluZyBpbiByb3dzIHNwYWNlZCBhdCBsZWFzdCAxMjBjbSBhcGFydC4gUGluY2ggb2ZmIGFsbCBmbG93ZXJzIHRoZSBmaXJzdCBzZWFzb24gYW5kIHRyYWluIHRoZSBwbGFudCdzIHJ1bm5lcnMsIHByZXNzaW5nIHRoZW0gaW50byB0aGUgc29pbCAxNS0yMmNtIGFwYXJ0IGZyb20gdGhlIG1vdGhlciBwbGFudC4gTXVsY2ggd2l0aCBzdHJhdyBvciBwaW5lIG5lZWRsZXMgaW4gdGhlIGZhbGwgd2hlbiB0aGUgcGxhbnRzIGhhdmUgZGllZCBiYWNrLiBXaGVuIHRoZSBwbGFudHMgc3RhcnQgdG8gZ3JvdyBiYWNrIGluIHRoZSBzcHJpbmcsIG1vdmUgdGhlIG11bGNoIGFzaWRlLiBBZnRlciBoYXJ2ZXN0IHRoZSBzZWNvbmQgc2Vhc29uLCBzZXQgYSBsYXdubW93ZXIgdG8gYWJvdXQgMTBjbSBoaWdoIGFuZCBtb3csIGJlaW5nIHN1cmUgbm90IHRvIGRhbWFnZSBjcm93bnMuXG5cbiBUaGUgb3RoZXIgdHdvIHR5cGVzIGFyZSBcblxuMikgRXZlci1iZWFyaW5nIGFuZCAzKSBEYXkgTmV1dHJhbCwgYm90aCBvZiB3aGljaCBzZW5kIG91dCBsZXNzIHJ1bm5lcnMgYW5kIGJlYXIgc2V2ZXJhbCBjcm9wcyBvZiBzbWFsbGVyIGZydWl0IHRocm91Z2hvdXQgdGhlIHNlYXNvbi4gVGhlc2UgdHdvIHR5cGVzIGNhbiBiZSBncm93biB1c2luZyByYWlzZWQgYmVkcyBhYm91dCAyMGNtIGhpZ2ggYW5kIDYwY20gd2lkZS4gVHJhbnNwbGFudCBjcm93bnMgb3IgcGx1Z3MgaW4gc3RhZ2dlcmVkIGRvdWJsZSByb3dzLCBhYm91dCAzMGNtIGFwYXJ0LiBSZW1vdmUgcnVubmVycyBhbmQgZmxvd2VycyB1bnRpbCBKdWx5IG9mIHRoZSBmaXJzdCB5ZWFyIHRvIGdpdmUgdGhlIHJvb3RzIHRpbWUgdG8gZGV2ZWxvcCwgYW5kIHRoZW4gYWxsb3cgcGxhbnRzIHRvIHByb2R1Y2UgZnJ1aXQuIEFsbCB0eXBlcyBvZiBzdHJhd2JlcnJpZXMgYmVnaW4gdG8gcHJvZHVjZSBmZXdlciBhbmQgbGVzcyBzd2VldCBmcnVpdCBvbmNlIHRoZXkgYXJlIHR3byB5ZWFycyBvciBvbGRlci4gQmVjYXVzZSBzdHJhd2JlcnJpZXMgYXJlIGEgaHlicmlkLCBzZWVkcyB3aWxsIG5vdCBicmVlZCB0cnVlLiBTdHJhd2JlcnJpZXMgYXJlIHByZWRvbWluYW50bHkgcHJvcGFnYXRlZCB1c2luZyBiYXJlIHJvb3QgcGx1Z3Mgb3IgY3Jvd25zIG9yIGRpdmlkaW5nIHJ1bm5lcnMuIE1ha2Ugc3VyZSBub3QgdG8gYnVyeSB0aGUgY3Jvd24gd2hlbiB0cmFuc3BsYW50aW5nIHBsdWdzLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81YTIwOTFjNDRlZjU1ZTAwMDQwMDAwMDkuanBnPzE1MTIwODM5MDcifSx7Im5hbWUiOiJyYWRpc2giLCJkZXNjcmlwdGlvbiI6IlJhZGlzaGVzIGFyZSBmYXN0LWdyb3dpbmcgY29vbCBzZWFzb24gcm9vdCB2ZWdldGFibGVzIGluIHRoZSBCcmFzc2ljYSBmYW1pbHkuIFRoZWlyIHRhcHJvb3RzIGNvbWUgaW4gdmFyaWV0eSBvZiBzaGFwZXMsIHNpemVzLCBhbmQgY29sb3JzIGFuZCBoYXZlIGEgc2hhcnAsIHNwaWN5IHRhc3RlLiBUaGV5IGFyZSB1c3VhbGx5IGVhdGVuIHJhdyBhbmQgYWRkZWQgdG8gc2FsYWRzLiBSYWRpc2hlcyBuZWVkIGNvb2wgd2VhdGhlciBhbmQgbW9pc3Qgc29pbCAtIHRoZXkgZG8gbm90IGRvIHdlbGwgaW4gaG90LCBkcnkgZW52aXJvbm1lbnRzLiBNb3JlIGdyb3dpbmcgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlIGluIGluZGl2aWR1YWwgc3BlY2llcyBlbnRyaWVzLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80OTE0MzgxMDQ5M18xMzIxNDE2Yzc3X3ouanBnIn0seyJuYW1lIjoiYnJvY2NvbGkiLCJkZXNjcmlwdGlvbiI6IkJyb2Njb2xpIGhhcyBsYXJnZSBmbG93ZXIgaGVhZHMga25vd24gYXMgXCJjcm93bnNcIiB0aGF0IGFyZSBncmVlbiB0byBibHVlLWdyZWVuIGluIGNvbG9yLCBncm91cGVkIHRpZ2h0bHkgdG9nZXRoZXIgYXRvcCBhIHRoaWNrIHN0ZW0sIGFuZCBzdXJyb3VuZGVkIGJ5IGxlYXZlcy4gQnJvY2NvbGkgcmVzZW1ibGVzIGNhdWxpZmxvd2VyLCBhIGRpZmZlcmVudCBjdWx0aXZhciBpbiBpdHMgc3BlY2llcy4gSXQgdGhyaXZlcyBpbiBjb29sIHdlYXRoZXIuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU3NmI3NGQ2ZmU4ZDc1MDAwMzAwMDJmMi5qcGc/MTQ2NjY2MDA1MiJ9LHsibmFtZSI6ImthbGUiLCJkZXNjcmlwdGlvbiI6IkthbGUgaXMgYSBjdWx0aXZhciBvZiB0aGUgc3BlY2llcyBCcmFzc2ljYSBvbGVyYWNlYS4gSXQgaGFzIGdyZWVuIG9yIHB1cnBsZSBsZWF2ZXMgdGhhdCBicmFuY2ggb2ZmIGZyb20gb25lIHRvIG11bHRpcGxlIHVwcmlnaHQgc3RlbXMgYW5kIGRvIG5vdCBmb3JtIGEgaGVhZCBsaWtlIGNhYmJhZ2UuIFRoZSBwbGFudCBpcyB1c3VhbGx5IGdyb3duIGFzIGFuIGFubnVhbCwgYnV0IGlmIGdyb3duIGFzIGEgcGVyZW5uaWFsLCBpdCB3aWxsIGZvcm0gc2VlZHMgaW4gdGhlIHNlY29uZCB5ZWFyLiBDdXJyZW50IHBvcHVsYXIgdmFyaWV0aWVzIGluY2x1ZGUgQ3VybHkga2FsZSwgSXRhbGlhbiBrYWxlLCBhbmQgUmVkIFJ1c3NpYW4ga2FsZSAoZ3JlZW4gbGVhdmVzIHdpdGggcGFsZSBwdXJwbGUgc3RlbXMpLiBJdCBjYW4gYmUgZ3Jvd24gYXMgYmFieSBzYWxhZCBncmVlbnMgb3IgZm9yIGJ1bmNoaW5nIGFkdWx0IGxlYXZlcy4gTGVhdmVzIGFyZSBzd2VldGVyIGFmdGVyIGEgZnJvc3QgYW5kIGRlbGljaW91cyBlYXRlbiByYXcsIGFkZGVkIHRvIHNhbGFkcywgc2F1dMOpZWQsIG9yIGFkZGVkIHRvIHN0ZXdzIGFuZCBjYXNzZXJvbGVzLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQ3ODEvMjcwNTQxMTA3NDhfN2IxNTM4OTc3YV96LmpwZyJ9LHsibmFtZSI6InBlYSIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDk2ODgzNDM2OTdfOWVkM2U3YjJhOV96LmpwZyJ9LHsibmFtZSI6ImNoZXJyeSB0b21hdG8iLCJkZXNjcmlwdGlvbiI6IkNoZXJyeSB0b21hdG9lcyByYW5nZSBpbiBzaXplIGZyb20gYSB0aHVtYnRpcCB0byB0aGUgc2l6ZSBvZiBhIGdvbGYgYmFsbC4gVGhlaXIgc2hhcGUgcmFuZ2VzIGZyb20gc3BoZXJpY2FsIHRvIHNsaWdodGx5IG9ibG9uZyB0byBwb2ludGVkIGF0IHRoZSBib3R0b20uIFRoZXkgYXJlIG9mdGVuIHJlZCwgYnV0IGNhbiBhbHNvIGJlIHllbGxvdywgZ3JlZW4sIHN0cmlwZWQsIGFuZCBldmVuIGJsYWNrLiBNb3JlIG9ibG9uZyBjaGVycnkgdG9tYXRvZXMgb2Z0ZW4gc2hhcmUgY2hhcmFjdGVyaXN0aWNzIHdpdGggcGx1bSB0b21hdG9lcywgYW5kIGFyZSBrbm93biBhcyBncmFwZSB0b21hdG9lcy4gQ2hlcnJ5IHRvbWF0b2VzIGNhbiBiZSBxdWl0ZSBzd2VldCAoc3VjaCBhcyB0aGUgU3VuZ29sZCBvciBTdW5zd2VldCB5ZWxsb3cgdmFyaWV0aWVzKSwgbW9yZSB0cmFkaXRpb25hbGx5IGFjaWRpYywgb3IgZGVlcCBpbiBmbGF2b3IuIFRoZXkgYXJlIGRlbGljaW91cyBmb3Igc25hY2tpbmcsIGluIHNhbGFkcywgbGlnaHRseSByb2FzdGVkIG9yIGdyaWxsZWQsIG9yIGJha2VkLiBUaGV5IHJlcXVpcmUgbGl0dGxlIHRvIG5vIHBydW5pbmcgdW5saWtlIGxhcmdlciB0b21hdG8gcGxhbnRzLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81NzA3M2VjNDRhM2FmNzAwMDMwMDAwMDguanBnPzE0NjAwOTI2MDkifSx7Im5hbWUiOiJnYXJsaWMiLCJkZXNjcmlwdGlvbiI6IlRoZSBnYXJsaWMgcGxhbnQgaGFzIGEgYnVsYm91cyByb290IHNlcGFyYXRlZCBpbnRvIGNsb3ZlcyBhbmQgYSB0YWxsIHN0YWxrIHdpdGggYnJhbmNoaW5nIGxlYXZlcy4gXG5cblRoZSBwbGFudCBoYXMgdHdvIG1haW4gc3Vic3BlY2llczogaGFyZCBhbmQgc29mdCBuZWNrLiBUaGUgY2hvaWNlIGJldHdlZW4gd2hpY2ggc3Vic3BlY2llcyB0byBncm93IGRlcGVuZHMgb24gbGF0aXR1ZGUgYW5kIGF0IHdoYXQgcG9pbnQgaW4gdGhlIGdyb3dpbmcgc2Vhc29uIHlvdSB3aWxsIGJlIHBsYW50aW5nIHRoZSBjcm9wOiBnYXJsaWMgY2FuIGJlIGRheS1sZW5ndGggc2Vuc2l0aXZlLiBIYXJkLW5lY2sgZ2FybGljIGlzIHVzdWFsbHkgZ3Jvd24gaW4gY29vbGVyIGNsaW1hdGVzIGFuZCBjcmVhdGVzIGxhcmdlciBjbG92ZXMuIFNvZnQtbmVjayBnYXJsaWMgaXMgZ3Jvd24gaW4gd2FybWVyIGNsaW1hdGVzIGFuZCBwcm9kdWNlcyBzbWFsbGVyLCB0aWdodGx5LXBhY2tlZCBjbG92ZXMuIFxuXG5CZSBzdXJlIHRvIHRyaW0gZ2FybGljIHNjYXBlcyBiZWZvcmUgdGhleSBmbG93ZXIgLSB0aGlzIHdpbGwgZm9jdXMgdGhlIHBsYW50J3MgZW5lcmd5IGludG8gYnVsYiBncm93dGgsIHJlc3VsdGluZyBpbiBsYXJnZXIgY2xvdmVzIGFuZCBidWxicy4gU2NhcGVzIGhhdmUgYSBmcmVzaCwgbGlnaHQgZ2FybGljIGZsYXZvci4gVGhleSBhcmUgZGVsaWNpb3VzIHJhdyBvciBjb29rZWQsIGFuZCBtYWtlIGEgZ3JlYXQgcGVzdG8uIiwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQ5MjIxMzk3NTExXzZmZWIyODI3ODdfei5qcGcifSx7Im5hbWUiOiJwb3RhdG8iLCJkZXNjcmlwdGlvbiI6IlBvdGF0b2VzIGFyZSBzdGFyY2h5IHJvb3QgdmVnZXRhYmxlcyBpbiB0aGUgU29sYW5hY2VhZSwgb3IgTmlnaHRzaGFkZSwgZmFtaWx5LCB3aGljaCBhbHNvIGluY2x1ZGVzIHRvbWF0b2VzLCBlZ2dwbGFudHMsIGFuZCBwZXBwZXJzLiBUaGV5IG9yaWdpbmF0ZWQgaW4gU291dGggQW1lcmljYSwgYW5kIHNwcmVhZCB0byBiZWNvbWUgYSB3b3JsZHdpZGUgc3RhcGxlLiBUaGUgbGVhdmVzIGFuZCBmcnVpdCBhcmUgdXN1YWxseSBwb2lzb25vdXMgYW5kIHRoZSBzdGVtIHR1YmVyIGlzIHRoZSBvbmx5IGVkaWJsZSBwYXJ0IG9uY2UgaXQgaXMgY29va2VkLiBUaGUgcG90YXRvIGNhbiBiZSBjb29rZWQgaW4gbWFueSB3YXlzLCBicmV3ZWQgaW50byBhbGNvaG9sLCBhbmQgYWxzbyB1c2VkIGFzIHRoZSBiYXNpcyBmb3IgY3JlYXRpbmcgYmlvcGxhc3RpY3MuIE1vcmUgZ3Jvd2luZyBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgaW4gaW5kaXZpZHVhbCBzcGVjaWVzIGVudHJpZXMuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU1MWRiZDVkMzczMjM5MDAwMzYyMDEwMC5qcGc/MTQyODAxMjM4MCJ9LHsibmFtZSI6InBhcnNsZXkiLCJkZXNjcmlwdGlvbiI6IlBhcnNsZXkgaXMgYW4gaGVyYiBpbiB0aGUgQXBpYWNlYWUgZmFtaWx5IHdpdGggdHdvIG1haW4gY3VsdGl2YXJzOiBmbGF0IGxlYWZlZCAob3IgSXRhbGlhbikgYW5kIGN1cmx5LiBTb21lIGdhcmRlbmVycyBmZWVsIGZsYXQgbGVhZiBpcyBlYXNpZXIgdG8gY3VsdGl2YXRlIHNpbmNlIGl0IGlzIG1vcmUgdG9sZXJhbnQgb2YgcmFpbiBhbmQgc3Vuc2hpbmUuIEN1cmx5IHBhcnNsZXkgaXMgbW9yZSBkZWNvcmF0aXZlIGluIGFwcGVhcmFuY2UuIEJvdGggY3VsdGl2YXJzIGNhbiBiZSB1c2VkIGZyZXNoIG9yIGRyaWVkIHRvIHNlYXNvbiBmb29kLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtOS5zdGF0aWNmbGlja3IuY29tLzgwMzYvMjk2ODExNzU0NDJfNzQ5OTQ0NDcyMV96LmpwZyJ9LHsibmFtZSI6InNhZ2UiLCJkZXNjcmlwdGlvbiI6IlNhZ2UgaXMgYW4gZXZlcmdyZWVuIHNocnViIHdpdGggd29vZHkgc3RlbXMsIHNvZnQgZ3JlZW4tZ3JheSBsZWF2ZXMsIGFuZCBibHVlIHRvIHB1cnBsaXNoIGZsb3dlcnMuIEl0IGlzIGluIHRoZSBNaW50IGZhbWlseSAoTGFtaWFjZWFlKSwgYW5kIGlzIHBlcmVubmlhbCBpbiBab25lcyA0LTguIEl0IGNhbiBiZSB1c2VkIGZyZXNoIG9yIGRyaWVkLCBhbmQgaGFzIGN1bGluYXJ5IGFuZCBtZWRpY2luYWwgdXNlcy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTUuc3RhdGljZmxpY2tyLmNvbS80NDA2LzM3MzcxMjY2NjcyXzExN2MyODE0Yzlfei5qcGcifSx7Im5hbWUiOiJvbmlvbiIsImRlc2NyaXB0aW9uIjoiLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81Njg1N2JlNzEwODM0NzAwMDMwMDAwMDAuanBnPzE0NTE1ODg1ODIifSx7Im5hbWUiOiJjaGl2ZXMiLCJkZXNjcmlwdGlvbiI6IkNoaXZlcyBhcmUgYSBwZXJlbm5pYWwgaGVyYiBpbiB0aGUgQWxsaXVtIGdlbnVzIHJlbGF0ZWQgdG8gZ2FybGljLCBzaGFsbG90cywgbGVla3MsIHNjYWxsaW9ucywgYW5kIENoaW5lc2Ugb25pb25zLiBUaGV5IGFyZSBncm93biBmb3IgY3VsaW5hcnkgYW5kIG9ybmFtZW50YWwgcHVycG9zZXMuIFRoZSBzY2FwZXMgb3Igc3RlbXMgYXJlIGhvbGxvdyBhbmQgdHVidWxhciBhbmQgaGF2ZSBhIG1pbGQgb25pb24gdGFzdGUuIFRoZXkgYXJlIG9uZSBvZiB0aGUgZmluZXMgaGVyYmVzIG9mIEZyZW5jaCBjdWlzaW5lIGFuZCBjb21tb25seSB1c2VkIGZyZXNoLiBUaGUgcGxhbnQgZm9ybXMgZGVuc2UgY2x1c3RlcnMgb2Ygc2xlbmRlciAyLTNjbSBidWxicywgd2hpY2ggY2FuIGJlIGNvb2tlZC4gQ2hpdmUgZmxvd2VycyBhcmUgZWRpYmxlLCBzdGFyLXNoYXBlZCwgYW5kIHBhbGUgcHVycGxlLiBDaGl2ZXMgYXJlIGEgZ29vZCBjb21wYW5pb24gcGxhbnQgYmVjYXVzZSB0aGVpciBzdWxmdXIgY29tcG91bmRzIHJlcGVsIG5lZ2F0aXZlIGluc2VjdHMsIGFuZCB0aGVpciBmbG93ZXJzIGF0dHJhY3QgYmVlcy4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNTRiNGI3OWE2MTMwNjUwMDAyMTAwMDAwLmpwZz8xNDIxMTI5NjI0In0seyJuYW1lIjoic3BpbmFjaCIsImRlc2NyaXB0aW9uIjoiU3BpbmFjaCBpcyBhbiBhbm51YWwgcGxhbnQgd2hvc2UgZGVlcCBncmVlbiBsZWF2ZXMgYXJlIGVhdGVuIGFzIGEgdmVnZXRhYmxlLiBJdCBncm93cyBiZXN0IGluIGNvb2xlciB3ZWF0aGVyLiBJdCBjYW4gYmUgZWF0ZW4gcmF3IG9yIGNvb2tlZC4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTUuc3RhdGljZmxpY2tyLmNvbS80NDY4LzM3NDQ1NzcwNTU0XzkzMGM5OWRhMWVfei5qcGcifSx7Im5hbWUiOiJ6dWNjaGluaSIsImRlc2NyaXB0aW9uIjoiWnVjY2hpbmkgaXMgYSB0eXBlIG9mIHN1bW1lciBzcXVhc2guIEl0J3Mgc29mdCwgZWRpYmxlIHNraW4gcmFuZ2VzIGZyb20gbGlnaHQgdG8gZGFyayBncmVlbiBhbmQgaXMgc29tZXRpbWVzIHN0cmlwZWQuIEl0IGNhbiBncm93IHRvIGEgbWV0ZXIgaW4gbGVuZ3RoLCBidXQgaXMgdXN1YWxseSBoYXJ2ZXN0ZWQgYXQgMTUtMjUgY20sIHdoZW4gdGhlIGZsZXNoIGlzIHRlbmRlciBhbmQgdGhlIHNlZWRzIHJlbGF0aXZlbHkgdW5kZXZlbG9wZWQuIEl0IGNhbiBiZSBlYXRlbiByYXcgb3IgY29va2VkLiBJdCBoYXMgc3BpbnkgbGVhdmVzIGFuZCBzdGVtcyBhbmQgbGFyZ2UgeWVsbG93IGZsb3dlcnMuIFRoZSBmbG93ZXJzIGFyZSBlZGlibGUsIGJ1dCBlYXRpbmcgdGhlbSBwcmV2ZW50cyB0aGUgenVjY2hpbmkgZnJvbSBkZXZlbG9waW5nLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGNlZTZhY2FlYTkzZDAwMDQwMDAwMDkuanBnPzE0ODk5NTQ0NjUifSx7Im5hbWUiOiJ0aHltZSIsImRlc2NyaXB0aW9uIjoiVGh5bWUgaXMgYSBwZXJlbm5pYWwgZXZlcmdyZWVuIGhlcmIgaW4gdGhlIExhbWlhY2VhZSAoTWludCkgZmFtaWx5LiBJdCBpcyByZWxhdGVkIHRvIE9yZWdhbm8uIFRoeW1lIGlzIGNvbGQtaGFyZHkgdG8gLTI4LjggwrBDIGFuZCBhIHBlcmVubmlhbCBpbiBVUyBIYXJkaW5lc3Mgem9uZXMgNS04LiBUaHltZSBjYW4gbGl2ZSBmb3IgNS02IHllYXJzIGJ1dCBuZWVkcyB0byBiZSBkaXZpZGVkIG9yIHJlcGxhY2VkIGFmdGVyIDMtNCB5ZWFycy4gSXQgY2FuIGJlIHVzZWQgZnJlc2ggb3IgZHJpZWQgdG8gc2Vhc29uIGRpc2hlcy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTguc3RhdGljZmxpY2tyLmNvbS83MzI4Lzk1MDIxOTg2MzlfYTc4NTMwYmFlMV96LmpwZyJ9LHsibmFtZSI6Im9yZWdhbm8iLCJkZXNjcmlwdGlvbiI6Ik9yZWdhbm8gaXMgYSBwZXJlbm5pYWwgaGVyYiB3aXRoIG1hbnkgY3VsaW5hcnkgdXNlcy4gSXQgaXMgYSBmbG93ZXJpbmcgcGxhbnQgaW4gdGhlIG1pbnQgZmFtaWx5IChMYW1pYWNlYWUpIGFuZCBuYXRpdmUgdG8gdGhlIE1lZGl0ZXJyYW5lYW4uIFRoZSBwbGFudCBoYXMgc3BhZGUtc2hhcGVkIGxlYXZlcyB3aXRoIHdoaXRlIG9yIHB1cnBsZSBmbG93ZXJzLiBJbiBjb2xkZXIgY2xpbWF0ZXMsIGl0IGlzIGdyb3duIGFzIGFubnVhbCBiZWNhdXNlIGl0IGNhbm5vdCBzdXJ2aXZlIGNvbGQgd2ludGVycy4gSXQgYWxzbyBncm93cyB3ZWxsIGluIGNvbnRhaW5lcnMuIE9yZWdhbm8gbWFrZXMgYSBncmVhdCBjb21wYW5pb24gcGxhbnQuIEl0J3MgbGVhdmVzIGFyZSBvZnRlbiBtb3JlIGZsYXZvcmZ1bCB3aGVuIGRyaWVkLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OWIxOWU2OTQ0ZDYyZTAwMDQwMDAwMDMuanBnPzE1MDQ4MTI2MzgifSx7Im5hbWUiOiJhcnVndWxhIiwiZGVzY3JpcHRpb24iOiJNaWxkbHkgYml0dGVyLCBzb21ldGltZXMgcGVwcGVyeSwgc2FsYWQgZ3JlZW4uIEZhc3QtZ3Jvd2luZyB3aXRoIGRlZXBseSBsb2JlZCBsZWF2ZXMuIFByZWZlcnMgY29vbGVyIHdlYXRoZXIsIGJvbHRzIGluIHRoZSBoZWF0LiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQ0MTAvMzc0MzExMTg3MjZfZmI0ZTg0ODg1MF96LmpwZyJ9LHsibmFtZSI6ImJlbGwgcGVwcGVyIiwiZGVzY3JpcHRpb24iOiJUaGUgYmVsbCBwZXBwZXIgaXMgYSBjdWx0aXZhciBncm91cCBvZiB0aGUgc3BlY2llcyBDYXBzaWN1bSBhbm51dW0uIEJlbGwgcGVwcGVyIGN1bHRpdmFycyBwcm9kdWNlIGZydWl0cyBpbiBjb2xvcnMgaW5jbHVkaW5nIHJlZCwgeWVsbG93LCBvcmFuZ2UsIGdyZWVuLCBicm93biwgd2hpdGUsIGFuZCBwdXJwbGUuIFRoZSBmcnVpdCBpcyBvZnRlbiBtaWxkbHkgc3dlZXQsIGJlY2F1c2UgdGhpcyBzcGVjaWZpYyBjdWx0aXZhciBkb2VzIG5vdCBwcm9kdWNlIGNhcHNhaWNpbiwgdGhlIGNoZW1pY2FsIHJlc3BvbnNpYmxlIGZvciBvdGhlciBwZXBwZXJzJyBzcGljaW5lc3MuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU0YjRiMDRmNjEzMDY1MDAwMjA3MDAwMC5qcGc/MTQyMTEyNzc1NyJ9LHsibmFtZSI6InB1bXBraW4iLCJkZXNjcmlwdGlvbiI6IlB1bXBraW5zIGFyZSBzcXVhc2ggY3VsdGl2YXJzIHRoYXQgYXJlIHJvdW5kIHRvIG92YWwgaW4gc2hhcGUgd2l0aCB0aGljaywgc2xpZ2h0bHkgcmliYmVkIHNraW4gdGhhdCB2YXJpZXMgZnJvbSBkZWVwIHllbGxvdyB0byBvcmFuZ2UgaW4gY29sb3IuIFRoZWlyIGZsZXNoIHJhbmdlcyBmcm9tIHllbGxvdyB0byBnb2xkIGFuZCBoYXMgbGFyZ2Ugc2VlZHMuIExpa2Ugb3RoZXIgbWVtYmVycyBvZiB0aGUgQ3VjdXJiaXRhY2VhZSBmYW1pbHksIHRoZXkgZ3JvdyBvbiBzcHJhd2xpbmcgdmluZXMuIERpZmZlcmVudCB2YXJpZXRpZXMgb2YgcHVtcGtpbnMgYXJlIGdyb3duIGZvciBmb29kIG9yIGRlY29yYXRpb24uIiwiaW1hZ2UiOiJodHRwczovL2Zhcm04LnN0YXRpY2ZsaWNrci5jb20vNzg4Mi80MDU4MjMyMDUwM19kM2EzNGY3ZjA1X3ouanBnIn0seyJuYW1lIjoiYmVldCIsImRlc2NyaXB0aW9uIjoiVHlwaWNhbGx5IGdyb3duIGZvciBpdHMgcm91bmQgb3IgY3lsaW5kcmljYWwgdGFwcm9vdCwgdGhlIGxlYXZlcyBvZiB0aGUgYmVldCBhcmUgYWxzbyBlZGlibGUuIExlYXZlcyByZXNlbWJsZSBTd2lzcyBjaGFyZCBvbiBhIHNtYWxsZXIgc2NhbGUgYW5kIGFyZSBnb29kIHNhdXTDqWVkLiBUaGUgdGFwcm9vdCwgb3IgYmVldCwgcmFuZ2VzIGluIGNvbG9yIGZyb20gZGVlcCByZWQgdG8gZ29sZCwgb3JhbmdlLCBvciB3aGl0ZSBhbmQgcmVkIHN0cmlwZWQuIFRoZSBiZWV0IGhhcyBhIGRlbGljaW91cywgZWFydGh5IGZsYXZvciB3aXRoIGEgdG91Y2ggb2Ygc3dlZXRuZXNzIHRvIGl0IHdoZW4gcm9hc3RlZC4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDk1NzE0MzM0NjZfYjYzYTUyNTc1OV96LmpwZyJ9LHsibmFtZSI6ImJlYW4iLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm01LnN0YXRpY2ZsaWNrci5jb20vNDQ4OS8yNDI0OTg2MjkwOF8xNGFlZTM0MTExX3ouanBnIn0seyJuYW1lIjoibWludCIsImRlc2NyaXB0aW9uIjoiTWludCBpcyBhIHBlcmVubmlhbCBoZXJiIHdpdGggYSBkaXN0aW5jdGl2ZSB0YXN0ZS4gSXQncyBzdGVtcyBhcmUgc3F1YXJlLXNoYXBlZCBhbmQgaXQgaGFzIHBpbmssIHB1cnBsZSwgb3Igd2hpdGUgZmxvd2Vycy4gUGVwcGVybWludCwgZ2luZ2VyIG1pbnQsIGFuZCBsYXJnZSBhcHBsZSBtaW50IGFyZSBoeWJyaWRzIG9mIG1pbnQuIE1pbnQgaXMgb2Z0ZW4gZ3Jvd24gaW4gcG90cyB0byBwcmV2ZW50IGl0IGZyb20gb3ZlcnRha2luZyB0aGUgZ2FyZGVuIHdpdGggaXRzIGludmFzaXZlLCBzcHJlYWRpbmcgcmhpem9tZSByb290IHN0cnVjdHVyZS4gSXQncyBsZWF2ZXMgYXJlIG1vc3QgYXJvbWF0aWMgYmVmb3JlIHRoZSBwbGFudCBmbG93ZXJzIGFuZCBjYW4gYmUgdXNlZCBmcmVzaCwgZHJpZWQsIG9yIGZyb3plbi4gTWludCdzIHN0cm9uZ2x5IHNjZW50ZWQgbGVhdmVzIGNvbmZ1c2UgdGhlIHBlc3RzIG9mIGNhcnJvdHMsIHRvbWF0b2VzLCBhbGxpdW1zLCBhbmQgYnJhc3NpY2FzLCBhbmQgZGV0ZXIgZmxlYSBiZWV0bGVzLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNC5zdGF0aWNmbGlja3IuY29tLzM3MDkvOTYxNzc0ODAyNV8yOGZkMTI2ZDc5X3ouanBnIn0seyJuYW1lIjoicmh1YmFyYiIsImRlc2NyaXB0aW9uIjoiUmh1YmFyYiBpcyBhIHBlcmVubmlhbCBoZXJiYWNlb3VzIHBsYW50IGluIFVTREEgWm9uZXMgNC04LiBJdCBjYW5ub3QgYmUgaGFydmVzdGVkIGZyb20gaW4gdGhlIGZpcnN0IHllYXIgb2YgcGxhbnRpbmcuIEl0IGhhcyBsYXJnZSBncmVlbiBsZWF2ZXMgdGhhdCBhcmUgcG9pc29ub3VzIGFuZCB0aGljaywgcmVkLWdyZWVuIHN0YWxrcyB0aGF0IGFyZSBlZGlibGUgcmF3IG9yIGNvb2tlZC4gSXQncyBzdGFsa3MgaGF2ZSBhIHN0cm9uZywgdGFydCB0YXN0ZSBhbmQgYXJlIGNvbW1vbmx5IHVzZWQgaW4gc3RyYXdiZXJyeS1yaHViYXJiIHBpZXMuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU5Mzg3MzIyNmQ5YjBmMDAwNDAwMDBjMC5qcGc/MTQ5Njg3MTcwNiJ9LHsibmFtZSI6ImNvcm4iLCJkZXNjcmlwdGlvbiI6IkNvcm4gaXMgYSBsYXJnZSBncmFpbiBwbGFudCwgb3IgdGFsbCBncmFzcywgZmlyc3QgZG9tZXN0aWNhdGVkIGFib3V0IDEwLDAwMCB5ZWFycyBhZ28gYnkgaW5kaWdlbm91cyBwZW9wbGVzIGluIFNvdXRoZXJuIE1leGljby4gVGhlIGxlYWZ5IHN0YWxrIHByb2R1Y2VzIGVhcnMgYWZ0ZXIgcG9sbGluYXRpb24uIERlcGVuZGluZyBvbiB0aGUgdmFyaWV0eSwgdGhlIGNvcm4gY2FuIGJlIGVhdGVuIGZyZXNoLCBvciBkcmllZCBhbmQgZ3JvdW5kIGludG8gY29ybm1lYWwuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQ5MzU1NTUwMjEyXzdkYjVkMDM4M2Nfei5qcGcifSx7Im5hbWUiOiJkaWxsIiwiZGVzY3JpcHRpb24iOiJEaWxsIGlzIGFuIGhlcmIgd3RoIHNsZW5kZXIgZ3JlZW4gc3RlbXMgYW5kIGZlYXRoZXJ5LCBkZWxpY2F0ZSBsZWF2ZXMuIEl0J3MgZmxvd2VycyBhcmUgd2hpdGUgdG8geWVsbG93LiBGcmVzaCBhbmQgZHJpZWQgZGlsbCBsZWF2ZXMgYXJlIHVzZWQgdG8gc2Vhc29uIGZpc2gsIGJvcnNjaHQsIGFuZCB0byBtYWtlIHBpY2tsZXMuIERpbGwgaXMgYmVzdCB3aGVuIHVzZWQgZnJlc2guIEl0IGxvc2VzIGl0cyBmbGF2b3IgcmFwaWRseSBpZiBkcmllZC4gRGlsbCBzZWVkIGlzIGFsc28gdXNlZCBhcyBhIHNwaWNlLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtMS5zdGF0aWNmbGlja3IuY29tLzQxMS8xODY4ODgzMjQzMV9hZmNhNmUzYTI3X3ouanBnIn0seyJuYW1lIjoiYXBwbGUiLCJkZXNjcmlwdGlvbiI6IlRoZSBhcHBsZSBpcyBhIGRlY2lkdW91cyB0cmVlIGluIHRoZSBSb3NlIGZhbWlseSBncm93biBmb3IgaXQncyBzd2VldCBmcnVpdC4gVGhlIGFwcGxlIG9yaWdpbmF0ZWQgaW4gQ2VudHJhbCBBc2lhIGFuZCBoYXMgc3ByZWFkIGFjcm9zcyB0aGUgd29ybGQuIFRoZXJlIGFyZSBub3cgb3ZlciA3LDUwMCBjdWx0aXZhcnMgYnJlZCBmb3IgYSB2YXJpZXR5IG9mIGNsaW1hdGVzIGFuZCBjaGFyYWN0ZXJpc3RpY3MuIEFwcGxlcyBhcmUgcHJvcGFnYXRlZCB0aHJvdWdoIGdyYWZ0aW5nIGJlY2F1c2Ugc2VlZHMgZG8gbm90IGJyZWVkIHRydWUuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm01LnN0YXRpY2ZsaWNrci5jb20vNDUzNy8zODkwODM1NTQ5MV8zMDQwMWU3NzdkX3ouanBnIn0seyJuYW1lIjoiYmx1ZWJlcnJ5IiwiZGVzY3JpcHRpb24iOiJQZXJlbm5pYWwgZmxvd2VyaW5nIHBsYW50cyB3aXRoIHN3ZWV0LCBpbmRpZ28tY29sb3JlZCBiZXJyaWVzLiBCbHVlYmVycnkgcGxhbnRzIGFyZSB1c3VhbGx5IGVyZWN0LCBwcm9zdHJhdGUgc2hydWJzIHRoYXQgcmFuZ2UgaW4gaGVpZ2h0IGZyb20gMTBjbSB0byA0bSBoaWdoLCBkZXBlbmRpbmcgb24gdGhlIGN1bHRpdmFyLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQ3MTUvMjYyMzE5MDM4NDhfYjZkYWVjYTE4ZV96LmpwZyJ9LHsibmFtZSI6ImNhdWxpZmxvd2VyIiwiZGVzY3JpcHRpb24iOiJDYXVsaWZsb3dlciBpcyBhIHZlZ2V0YWJsZSBpbiB0aGUgQnJhc3NpY2FjZWFlIGZhbWlseS4gVGhlIHNvbGlkLCBmaXJtIGhlYWQgcmVzZW1ibGVzIHRoYXQgb2YgYnJvY2NvbGkgYW5kIGlzIHVzdWFsbHkgd2hpdGUsIGJ1dCBjYW4gYWxzbyBiZSB5ZWxsb3csIHB1cnBsZSwgb3IgZ3JlZW4gaW4gY29sb3IuIExpa2UgYnJvY2NvbGksIGl0IHNpdHMgYXRvcCBhIHN0YWxrLiBUaGUgaGVhZCBpcyB3cmFwcGVkIGluIHRoaWNrIGxlYXZlcyB0aGF0IGJlZ2luIHRvIG9wZW4gd2hlbiB0aGUgcGxhbnQgaXMgcmVhZHkgZm9yIGhhcnZlc3QuIEFsbCBjYXVsaWZsb3dlciBkb2VzIGJlc3QgaW4gY29vbCB3ZWF0aGVyLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGMzYmRmMDdiMTJmODAwMDQwMDAwMTIuanBnPzE0ODkyMjMxNDcifSx7Im5hbWUiOiJsYXZlbmRlciIsImRlc2NyaXB0aW9uIjoiTGF2ZW5kZXIgaGFzIGFuIGVhc2lseSByZWNvZ25pemFibGUgc2NlbnQgYW5kIHB1cnBsZSB0byBibHVlIGZsb3dlcnMgdGhhdCBncm93IGluIHdob3Jscy4gTGVhZiBzaGFwZSB2YXJpZXMgYWNyb3NzIHRoZSBnZW51cy4gSXQgaXMgYSBuYXR1cmFsIHJlcGVsbGFudCBvZiBtb3Rocywgc2x1Z3MsIGFuZCBkZWVyLCBhbmQgYSBncmVhdCBjb21wYW5pb24gZm9yIGFueSBwbGFudCB0aGF0IHN1ZmZlcnMgZnJvbSB0aGVzZSBwZXN0cyAoc3VjaCBhcyBrYWxlLCBjYWJiYWdlLCBhbmQgb3RoZXIgbWVtYmVycyBvZiB0aGUgQnJhc3NpY2FjZWFlIGZhbWlseSkuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU3ZTgxNGNiN2NmNWRjMDAwMzAwMDI2YS5qcGc/MTQ3NDgyNzQ2NiJ9LHsibmFtZSI6IlN3aXNzIGNoYXJkIiwiZGVzY3JpcHRpb24iOiJTd2lzcyBDaGFyZCBpcyBhIGxlYWZ5IGdyZWVuIHZlZ2V0YWJsZSBpbiB0aGUgQmVldCBmYW1pbHkuIFRoZSB0aGljayBzdGVtcyBjb21lIGluIGEgdmFyaWV0eSBvZiBjb2xvcnMgaW5jbHVkaW5nIHdoaXRlLCBwaW5rLCByZWQsIHllbGxvdywgb3JhbmdlLCBhbmQgcGFsZSBncmVlbi4gQ2hhcmQgaGFzIGxhcmdlLCBjcmlua2x5IGxlYXZlcyB3aXRoIGRpc3RpbmN0aXZlIHZlaW5zLiBUaGUgbGVhdmVzIGFuZCBzdGVtcyBhcmUgZWRpYmxlIGFuZCBoaWdoIGluIG51dHJpZW50cy4gU3dpc3MgY2hhcmQgY2FuIGJlIGVhdGVuIHJhdywgc2F1dMOpZWQsIGJha2VkLCBvciBzdGVhbWVkLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtMS5zdGF0aWNmbGlja3IuY29tLzgyMC80MDEyNTQ5NzI4NV82NzZmMzNlNWY2X3ouanBnIn0seyJuYW1lIjoiZWdncGxhbnQiLCJkZXNjcmlwdGlvbiI6IkVnZ3BsYW50cyBjb21tb25seSBhcmUgZWdnLXNoYXBlZCB3aXRoIGdsb3NzeSBibGFjayBza2luLCBidXQgY2FuIGNvbWUgaW4gYSB2YXJpZXR5IG9mIG90aGVyIHNoYXBlcyBhbmQgY29sb3JzLiBUaGV5IGNhbiBiZSB3aGl0ZSwgeWVsbG93LCBhbmQgcGFsZSB0byBkZWVwIHB1cnBsZS4gU29tZSBhcmUgYXMgc21hbGwgYXMgZ29vc2UgZWdncy4gVGhlICdSb3NhIEJpYW5jYScgY3VsdGl2YXIgaXMgc3F1YXQgYW5kIHJvdW5kLCB3aGlsZSBBc2lhbiBjdWx0aXZhcnMgY2FuIGJlIGxvbmcgYW5kIHRoaW4uIEVnZ3BsYW50IHN0ZW1zIGFyZSBvZnRlbiBzcGlueSBhbmQgdGhlaXIgZmxvd2VycyByYW5nZSBmcm9tIHdoaXRlIHRvIHB1cnBsZS4gXG5cblRoZWlyIGZsZXNoIGlzIGdlbmVyYWxseSB3aGl0ZSB3aXRoIGEgbWVhdHkgdGV4dHVyZSBhbmQgc21hbGwgc2VlZHMgaW4gdGhlIGNlbnRlci4gVGhleSBhcmUgZGVsaWNpb3VzIGdyaWxsZWQsIHJvYXN0ZWQsIGluIHNvdXBzIGFuZCBzdGV3cywgYW5kIGJyZWFkZWQgYW5kIGZyaWVkLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80OTM3NDc3MjM0OF9jMmIyNmQ0ZmI4X3ouanBnIn0seyJuYW1lIjoicGVwcGVybWludCIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTEuc3RhdGljZmxpY2tyLmNvbS80MjcvMzIxOTcyMzQ4NTRfMzQ4YjFhNGRhOF96LmpwZyJ9LHsibmFtZSI6ImNoYXJkIiwiZGVzY3JpcHRpb24iOm51bGwsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80ODcxNDYwMTY1Nl9jMTk1MTQ3NWUwX3ouanBnIn0seyJuYW1lIjoibmFzdHVydGl1bSIsImRlc2NyaXB0aW9uIjoiTmFzdHVydGl1bSBpcyBhbiBlZGlibGUgZmxvd2VyIGFuZCBwb3B1bGFyIGNvbXBhbmlvbiBwbGFudCB0aGF0IGRvZXMgd2VsbCBpbiBwb29yIHNvaWwgYW5kIGRyeSBjb25kaXRpb25zLiBJdCBjYW4gYmUgZ3Jvd24gYXMgYSBjb21wYW5pb24gcGxhbnQsIGFuIG9ybmFtZW50YWwsIGFuZCwgZGVwZW5kaW5nIG9uIHRoZSB2YXJpZXR5LCBhIGdyb3VuZCBjb3Zlci4gQ2xpbWJpbmcgdmFyaWV0aWVzIHJlcXVpcmUgdHJlbGxpc2luZy4gTmFzdHVydGl1bSBsdXJlcyBhcGhpZHMgYXdheSBmcm9tIGJlYW5zIGFuZCBpdCdzIGF0dHJhY3RpdmUgZmxvd2VycyBkcmF3IGJlbmVmaWNpYWwgaW5zZWN0cyB0aGF0IHByZXkgb24gYXBoaWRzLiBUaGUgZmxvd2VycyBhbmQgbGVhdmVzIGFyZSBlZGlibGUgYW5kIGhhdmUgYSBzcGljeSBmbGF2b3IuIFRoZSBwbGFudCBjYW4gYWxzbyBiZSBncm93biBhcyBhIHNhbGFkIGdyZWVuOiBoYXJ2ZXN0IHRoZSB5b3VuZyBzaG9vdHMgd2hlbiAyLTMgbGVhdmVzIGhhdmUgZGV2ZWxvcGVkLiBJZiBzdGFydGluZyBmcm9tIHNlZWQsIHNjYXJpZnkgdGhlIHNlZWQgYnkgZ2VudGx5IHJ1YmJpbmcgaXQgd2l0aCBhIG5haWwgZmlsZSB0byBzb2Z0ZW4gdGhlIGhhcmQgc2VlZCBjb2F0IGFuZCBhaWQgZ2VybWluYXRpb24gYmVmb3JlIHNvd2luZy5cbmx1cmluZyBhcGhpZHMgYXdheSBmcm9tIHRoZSBiZWFucy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTUuc3RhdGljZmxpY2tyLmNvbS80NTYwLzM4NTc2MDM5NzgxXzUwMzhlZmM1M2Zfei5qcGcifSx7Im5hbWUiOiJtZXNjbHVuIGxldHR1Y2UiLCJkZXNjcmlwdGlvbiI6IkEgbWl4IG9mIGFzc29ydGVkIHNtYWxsIHlvdW5nIHNhbGFkIGdyZWVucyB0aGF0IG9yaWdpbmF0ZWQgaW4gUHJvdmVuY2UsRnJhbmNlLiBUaGUgdHJhZGl0aW9uYWwgbWl4IGluY2x1ZGVzIGNoZXJ2aWwsYXJ1Z3VsYSxsZWFmeSBsZXR0dWNlcyBhbmQgZW5kaXZlLHdoaWxlIHRoZSB0ZXJtIG1lc2NsdW4gbWF5IGFsc28gcmVmZXIgdG8gYSBibGVuZCB0aGF0IG1pZ2h0IGluY2x1ZGUgc29tZSBvciBhbGwgb2YgdGhlc2UgZm91ciBhbmQgYmFieSBzcGluYWNoLGNvbGxhcmQgZ3JlZW5zLFN3aXNzIGNoYXJkIChzaWx2ZXIgYmVldCksbXVzdGFyZCBncmVlbnMsZGFuZGVsaW9uIGdyZWVucyxmcmlzw6llLG1penVuYSxtw6JjaGUgKGxhbWIncyBsZXR0dWNlKSxyYWRpY2NoaW8sc29ycmVsLG9yIG90aGVyIGZyZXNoIGxlYWYgdmVnZXRhYmxlcy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTEuc3RhdGljZmxpY2tyLmNvbS83OTEvNDE1NTMyNDc3MjJfOWI5MTJlMmQ5OV96LmpwZyJ9LHsibmFtZSI6ImxlZWsiLCJkZXNjcmlwdGlvbiI6IlRoZSBsZWVrIGlzIGEgdmVnZXRhYmxlLCBhIGN1bHRpdmFyIG9mIEFsbGl1bSBhbXBlbG9wcmFzdW0sIHRoZSBicm9hZGxlYWYgd2lsZCBsZWVrLiBUaGUgZWRpYmxlIHBhcnQgb2YgdGhlIHBsYW50IGlzIGEgYnVuZGxlIG9mIGxlYWYgc2hlYXRocyB0aGF0IGlzIHNvbWV0aW1lcyBlcnJvbmVvdXNseSBjYWxsZWQgYSBzdGVtIG9yIHN0YWxrLiBIaXN0b3JpY2FsbHksIG1hbnkgc2NpZW50aWZpYyBuYW1lcyB3ZXJlIHVzZWQgZm9yIGxlZWtzLCBidXQgdGhleSBhcmUgbm93IGFsbCB0cmVhdGVkIGFzIGN1bHRpdmFycyBvZiBBLiBhbXBlbG9wcmFzdW0uIFRoZSBuYW1lICdsZWVrJyBkZXZlbG9wZWQgZnJvbSB0aGUgQW5nbG8tU2F4b24gd29yZCBcImxlYWNcIi4gVHdvIGNsb3NlbHkgcmVsYXRlZCB2ZWdldGFibGVzLCBlbGVwaGFudCBnYXJsaWMgYW5kIGt1cnJhdCwgYXJlIGFsc28gY3VsdGl2YXJzIG9mIEEuIGFtcGVsb3ByYXN1bSwgYWx0aG91Z2ggZGlmZmVyZW50IGluIHRoZWlyIHVzZXMgYXMgZm9vZC4gVGhlIG9uaW9uIGFuZCBnYXJsaWMgYXJlIGFsc28gcmVsYXRlZCwgYmVpbmcgb3RoZXIgc3BlY2llcyBvZiB0aGUgZ2VudXMgQWxsaXVtLlxuTGVla3MgaGF2ZSB0aGljayBibHVlLWdyZWVuIGZvbGlhZ2UuIFRoZSBidW5kbGUgb2Ygd2hpdGUgbGVhZiBzaGVhdGhzIGhhcyBhIG1pbGQgb25pb24gdGFzdGUgYW5kIGNhbiBiZSBibGFuY2hlZCwgc3RlYW1lZCwgYnJhaXNlZCwgb3IgZ3JpbGxlZCBhbmQgdXNlZCBpbiBzb3Vwcywgc3Rld3MsIG9tZWxldCBmaWxsaW5ncywgYW5kIG1vcmUuIFRoZSBsZWF2ZXMgY2FuIGJlIHVzZWQgdG8gbWFrZSBzdG9jay4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNTkxYjU3ZmQxZmFlYTcwMDA0MDAwMDBhLmpwZz8xNDk0OTY0MjE1In0seyJuYW1lIjoiY2FiYmFnZSIsImRlc2NyaXB0aW9uIjoiQ2FiYmFnZSBpcyBhIG1lbWJlciBvZiB0aGUgQnJhc3NpY2EgZmFtaWx5IGFuZCByZWxhdGVkIHRvIGthbGUsIGJyb2Njb2xpLCBicnVzc2VscyBzcHJvdXRzLCBhbmQgY2F1bGlmbG93ZXIuIEl0J3MgZGVuc2UsIGxheWVyZWQgaGVhZHMgZ3JvdyBvbiBzdGFsa3MgYW5kIGFyZSBzdXJyb3VuZGVkIGJ5IGxvb3NlciBvdXRlciBsZWF2ZXMuIEl0J3MgbGVhdmVzIGNhbiBiZSBncmVlbiwgd2hpdGUsIG9yIHB1cnBsZSBpbiBjb2xvciwgYW5kIHNtb290aCBvciBjcmlua2x5IGluIHRleHR1cmUuIERlcGVuZGluZyBvbiB0aGUgdmFyaWV0eSwgdGhlIGhlYWQgY2FuIGJlIHJvdW5kLCBvYmxvbmcsIG9yIGZsYXQuIENhYmJhZ2UgcHJlZmVycyBjb29sZXIgdGVtcGVyYXR1cmVzIGFuZCBpcyBiZXN0IHBsYW50ZWQgaW4gdGhlIHNwcmluZyBvciBmYWxsLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80ODcyOTgyNDE0OF9jNjdiZjY2NTdkX3ouanBnIn0seyJuYW1lIjoic3VuZmxvd2VyIiwiZGVzY3JpcHRpb24iOiJTdW5mbG93ZXJzIGFyZSBsYXJnZSBmbG93ZXJzIHdpdGggYnJpZ2h0IHRvIGRlZXAgeWVsbG93IHJheSBmbG9yZXRzIHN1cnJvdW5kaW5nIGEgbGFyZ2UgY2lyY3VsYXIgZ3JvdXBpbmcgb2YgZGlzYyBmbG9yZXRzIHRoYXQgbWF0dXJlIGludG8gc2VlZHMuIFN1bmZsb3dlcnMgYXJlIGdyb3duIGZvciBvcm5hbWVudGFsIHB1cnBvc2VzLCBjdXQgZmxvd2Vycywgb3IgdGhlaXIgZWRpYmxlIHNlZWRzLiBUaGV5IGNhbiByZWFjaCBoZWlnaHRzIG9mIDMwMGNtIG9yIG1vcmUuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU5MzVjYzUzMTEzYzk1MDAwNDAwMDIzNy5qcGc/MTQ5NjY5NzkzNCJ9LHsibmFtZSI6ImNvbW1vbiB0aHltZSIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTUuc3RhdGljZmxpY2tyLmNvbS80NDE4LzM3MjI1Mzc0NDc2XzAxZTBkMGI4ZGRfei5qcGcifSx7Im5hbWUiOiJyYWluYm93IGNoYXJkIiwiZGVzY3JpcHRpb24iOiJSYWluYm93IENoYXJkIGlzIGdyb3duIGZyb20gYSBzZWVkIG1peCB0aGF0IGNvbnRhaW5zIGNoYXJkIGN1bHRpdmFycyB0aGF0IGhhdmUgcGluaywgeWVsbG93LCBvcmFuZ2UsIHJlZCwgYW5kIHdoaXRlIHN0ZW1zLiBCb3RoIHRoZSBsZWF2ZXMgYW5kIHN0ZW1zIGFyZSBlZGlibGUgYW5kIGFyZSBkZWxpY2lvdXMgaW4gc2FsYWRzLCBzYXV0w6llZCwgYW5kIGJha2VkLiBDaGFyZCBpcyByZWxhdGVkIHRvIGJlZXRzLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGNlZTAzMmFlYTkzZDAwMDQwMDAwMDAuanBnPzE0ODk5NTI4MTMifSx7Im5hbWUiOiJjYXBzaWN1bSIsImRlc2NyaXB0aW9uIjoiQ2FwaXNjdW0gaXMgYSBnZW51cyBvZiBmbG93ZXJpbmcgcGxhbnRzIGluIHRoZSBuaWdodHNoYWRlIGZhbWlseSBTb2xhbmFjZWFlIHRoYXQgcHJvZHVjZXMgcGVwcGVycy4gVGhlIENhcGlzY3VtIGdlbnVzIGNvbnRhaW5zIDIwLTI3IHNwZWNpZXMgb2YgcGVwcGVycyB3aGljaCB2YXJ5IGluIGNvbG9yLCBzaGFwZSwgc2l6ZSwgYW5kIGhlYXQuIDUgc3BlY2llcyBhcmUgZG9tZXN0aWNhdGVkLiBNb3N0IHBlcHBlcnMgYXJlIGdyZWVuIHdoZW4gdW5yaXBlIGFuZCBjaGFuZ2UgY29sb3IgYXMgdGhlIGZydWl0IG1hdHVyZXMuIFRoZSBmcnVpdCBvZiBtb3N0IHNwZWNpZXMgY29udGFpbnMgY2Fwc2FpY2luLCB3aGljaCBnaXZlcyBob3QgcGVwcGVycyB0aGVpciBzcGljaW5lc3MuIEJlbGwgcGVwcGVycyAoQ2Fwc2ljdW0gYW5udXVtKSBhcmUgYW4gZXhjZXB0aW9uOiB0aGV5IGRvIG5vdCBjb250YWluIGNhcHNhaWNpbiBkdWUgdG8gYSByZWNlc3NpdmUgZ2VuZSwgYW5kIGFyZSB0aGVyZWZvcmUgbm90IHNwaWN5LiBUaGUgU2NvdmlsbGUgc2NhbGUgaXMgdXNlZCB0byBtZWFzdXJlIHRoZSByZWxhdGl2ZSBoZWF0IG9mIHBlcHBlcnMuIEJlbGwgcGVwcGVycyBoYXZlIGEgcmF0aW5nIG9mIDAtMjUgU2NvdmlsbGUgSGVhdCBVbml0cyAoU0hVKSwgamFsYXBlbm9zIGFyZSBiZXR3ZWVuIDIsNTAwLTEwLDAwMCBTSFUuIEFsbCBwZXBwZXJzLCByZWdhcmRsZXNzIG9mIHNwZWNpZXMsIHByZWZlciBhIGxvbmcsIHdhcm0gZ3Jvd2luZyBzZWFzb24gYW5kIHdlbGwtZHJhaW5lZCBzb2lsIGhpZ2ggaW4gb3JnYW5pYyBtYXR0ZXIuIFNlZWRzIGNhbiBiZSBzdGFydGVkIGluZG9vcnMgOC0xMCB3ZWVrcyBiZWZvcmUgaGFyZGVuaW5nIG9mZiBhbmQgdHJhbnNwbGFudGluZy4gSW4gY29vbGVyIGNsaW1hdGVzLCBpdCBjYW4gYmUgcHJlZmVyYWJsZSB0byBncm93IHBlcHBlcnMgaW4gY29udGFpbmVycyBpbmRvb3JzIHRvIGV4dGVuZCB0aGUgZ3Jvd2luZyBzZWFzb24gYW5kIHByZXZlbnQgZnJvc3QgZnJvbSBraWxsaW5nIHBsYW50cy4gUGVwcGVycyBoYXZlIGFuIHVwcmlnaHQgZ3Jvd2luZyBoYWJpdCBhbmQgY2FuIGJlbmVmaXQgZnJvbSBzdGFraW5nIHRvIGhlbHAgdGhlIHBsYW50IHN1cHBvcnQgdGhlIGZydWl0cy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTguc3RhdGljZmxpY2tyLmNvbS83ODY3LzQ3MzI0MDkyMjIxXzU5ZTUxMmRlYjdfei5qcGcifSx7Im5hbWUiOiJXZWxzaCBvbmlvbiIsImRlc2NyaXB0aW9uIjoiVGhlIFdlbHNoIE9uaW9uLCBvciBCdW5jaGluZyBPbmlvbiwgaXMgYSBwZXJlbm5pYWwgc3BlY2llcyBvZiBvbmlvbiBuYXRpdmUgdG8gQ2hpbmEgdGhhdCBpcyBub3cgZ3Jvd24gYXJvdW5kIHRoZSB3b3JsZC4gV2Vsc2ggT25pb25zIGFyZSB2ZXJ5IHNpbWlsYXIgaW4gdGFzdGUgYW5kIGFwcGVhcmFuY2UgdG8gdGhlIGNvbW1vbiBvbmlvbiwgQWxsaXVtIGNlcGEuIExhcmdlIFdlbHNoIE9uaW9ucyByZXNlbWJsZSBsZWVrcyBhbmQgc21hbGwgb25lcyBsb29rIGxpa2UgY2hpdmVzLiBUaGUgbWFpbiBkaWZmZXJlbmNlIGlzIHRoYXQgdGhlIHN0ZW1zIG9mIHRoZSBXZWxzaCBPbmlvbiBhcmUgaG9sbG93IGFuZCB0aGVpciBidWxicyBhcmUgYmFyZWx5IHRoaWNrZXIgdGhhbiB0aGVpciBzdGVtcywgd2hpY2ggaXMgd2h5IHRoZXkgYXJlIHNvbWV0aW1lcyBkZXNjcmliZWQgYXMgYmVpbmcgXCJidWxiLWxlc3MuXCIgUGxhbnRzIGZvcm0gcGVyZW5uaWFsIGNsdW1wcywgd2hpY2ggY2FuIGJlIGRpdmlkZWQgdG8gcHJvcGFnYXRlIG1vcmUgb25pb25zLiBXZWxzaCBPbmlvbnMgY2FuIGJlIGdyb3duIGFzIGFuIGFubnVhbCBpbiBjb29sZXIgcmVnaW9ucyB3aGVyZSB0aGUgcGxhbnRzIGNhbm5vdCBvdmVyd2ludGVyLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQ1NDgvMzg2MzkzOTE5MDJfYTdjMTRlNTMxNV96LmpwZyJ9LHsibmFtZSI6ImFydGljaG9rZSIsImRlc2NyaXB0aW9uIjoiVGhlIGdsb2JlIGFydGljaG9rZSBpcyBhIHZhcmlldHkgb2YgYSBzcGVjaWVzIG9mIHRoaXN0bGUgY3VsdGl2YXRlZCBhcyBhIGZvb2QuIFRoZSBidWRkaW5nIGFydGljaG9rZSBmbG93ZXItaGVhZCBpcyB0aGUgZWRpYmxlIHBhcnQgb2YgdGhlIHBsYW50LiBJdCBpcyBhIGNsdXN0ZXIgb2YgbWFueSBidWRkaW5nIHNtYWxsIGZsb3dlcnMgKGtub3duIGFzIGFuIFwiaW5mbG9yZXNjZW5jZVwiKSBhbmQgYnJhY3RzIG9uIGFuIGVkaWJsZSBiYXNlLiBPbmNlIHRoZSBidWRzIGJsb29tIHRoZSBoZWFkIGJlY29tZXMgY29hcnNlIGFuZCBiYXJlbHkgZWRpYmxlLiBBcnRpY2hva2VzIGFyZSBwZXJlbm5pYWxzIGluIFpvbmUgNyBhbmQgd2FybWVyLiBUaGV5IG5vcm1hbGx5IHByb2R1Y2UgZWRpYmxlIGZsb3dlci1oZWFkcyBkdXJpbmcgdGhlaXIgc2Vjb25kIHllYXIsIGJ1dCByZWNlbnQgY3VsdGl2YXJzIHN1Y2ggYXMgJ0ltcGVyaWFsIFN0YXInIGhhdmUgYmVlbiBicmVkIHRvIHByb2R1Y2UgaW4gdGhlIGZpcnN0IHllYXIuIE90aGVyIGN1bHRpdmFycywgc3VjaCBhcyAnTm9ydGhlcm4gU3RhcicsIGhhdmUgYmVlbiBicmVkIHRvIG92ZXJ3aW50ZXIgaW4gbW9yZSBub3J0aGVybiBjbGltYXRlcy4gVGhlcmUgYXJlIGdyZWVuIGFuZCBwdXJwbGUgdmFyaWV0aWVzIG9mIGFydGljaG9rZS4gVGhleSBhcmUgb2Z0ZW4gc3RlYW1lZCwgc2F1dMOpZWQgb3IgYnJhaXNlZCwgYnV0IGNhbiBhbHNvIGJlIGVhdGVuIHJhdy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDkzMzE0NjA1MThfZGZjZjljOGQ4N196LmpwZyJ9LHsibmFtZSI6InNxdWFzaCIsImRlc2NyaXB0aW9uIjoiU3F1YXNoIGlzIGEgZ2VudXMgb2YgaGVyYmFjZW91cyB2aW5lcyB0aGF0IGhhdmUgbGFyZ2UgZWRpYmxlIG9yYW5nZSBmbG93ZXJzIHRoYXQgbWF0dXJlIGludG8gZ291cmRzIG9yIGN1Y3VyYml0cy4gU3F1YXNoIGFyZSBjb21tb25seSBkaXZpZGVkIGludG8gdHdvIG1haW4gZ3JvdXBzOiBzdW1tZXIgYW5kIHdpbnRlci4gU3VtbWVyIHNxdWFzaCBoYXZlIHNob3J0ZXIgZ3Jvd2luZyB0aW1lcywgYSBidXNoeSBncm93dGggaGFiaXQsIHRlbmRlciBza2luLCBhbmQgYXJlIHF1aXRlIHByb2xpZmljLiBDb21tb24gdHlwZXMgaW5jbHVkZSBjdWN1bWJlcnMsIHp1Y2NoaW5pLCBhbmQgcGF0dHlwYW4gc3F1YXNoLiBXaW50ZXIgc3F1YXNoIHRha2UgbG9uZ2VyIHRvIG1hdHVyZSwgaGF2ZSBhIG1vcmUgc3ByYXdsaW5nIGdyb3d0aCBoYWJpdCwgYW5kIHByb2R1Y2UgZ291cmRzIHdpdGggdGhpY2tlciBza2lucyB0aGF0IGNhbiBiZSBzdG9yZWQgZm9yIGEgZmV3IG1vbnRocy4gQ29tbW9uIHdpbnRlciBzcXVhc2ggYXJlIHB1bXBraW5zLCBidXR0ZXJudXQgc3F1YXNoLCBhY29ybiwgYW5kIGRlbGljYXRhLiBNb3N0IHNxdWFzaCB0cmFuc3BsYW50IHBvb3JseS4gSWYgc3RhcnRpbmcgZnJvbSBzZWVkIGluZG9vcnMsIHVzZSBwZWF0IHBvdHMgdGhhdCBjYW4gYmUgZGlyZWN0bHkgdHJhbnNwbGFudGVkIGludG8gdGhlIHNvaWwgdG8gcmVkdWNlIHJvb3QgZGlzdHVyYmFuY2UuIE1vcmUgZ3Jvd2luZyBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgaW4gaW5kaXZpZHVhbCBzcGVjaWVzIGVudHJpZXMuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU0YjRhOTA0NjEzMDY1MDAwMjAxMDAwMC5qcGc/MTQyMTEyNTg5MCJ9LHsibmFtZSI6InJvbWFpbmUgbGV0dHVjZSIsImRlc2NyaXB0aW9uIjoiUm9tYWluZSBpcyBhIHZhcmlldHkgb2YgbGV0dHVjZSB0aGF0IGdyb3dzIGludG8gYSBkZW5zZSwgdGFsbCBoZWFkLiBJdCdzIGxlYXZlcyBhcmUgbGlnaHQgdG8gYnJpZ2h0IGdyZWVuIGFuZCBoYXZlIGZpcm0gcmlicyBkb3duIHRoZWlyIGNlbnRlcnMuIEl0IGlzIG1vcmUgdG9sZXJhbnQgb2YgaGVhdCB0aGFuIG1vc3QgbGV0dHVjZXMuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vOTA1LzQyMTc1OTE1NDcyXzU5YTFiODRkYTBfei5qcGcifSx7Im5hbWUiOiJjZWxlcnkiLCJkZXNjcmlwdGlvbiI6IlRoZSBjZWxlcnkgcGxhbnQgaGFzIGxvbmcgZmlicm91cyBzdGFsa3MgdGhhdCB0YXBlciBpbnRvIGxlYXZlcy4gVGhlIHN0YWxrcyBhbmQgbGVhdmVzIGNhbiBib3RoIGJlIGVhdGVuLiBDZWxlcnkgc2VlZCBpcyBhbHNvIHVzZWQgYXMgYSBzcGljZS4gQ2VsZXJ5IHNlZWQgZXh0cmFjdHMgYXJlIHVzZWQgaW4gbWVkaWNpbmVzLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81NzZiNzViOGZlOGQ3NTAwMDMwMDAyZjcuanBnPzE0NjY2NjAyNzgifSx7Im5hbWUiOiJmcmlsbHkgbGV0dHVjZSIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTguc3RhdGljZmxpY2tyLmNvbS83ODIwLzMzNjg0Mzc0NTQ4X2QxYjhiZjQ4MWFfei5qcGcifSx7Im5hbWUiOiJmZWlqb2EiLCJkZXNjcmlwdGlvbiI6IkZlaWpvYSwgUGluZWFwcGxlIEd1YXZhLCBvciBHdWF2YXN0ZWVuLCBpcyBhIHBlcmVubmlhbCwgZXZlcmdyZWVuIHNocnViIGluIHRoZSBNeXJ0bGUgKE15cnRhY2VhZSkgZmFtaWx5LiBJdCBpcyBuYXRpdmUgdG8gdGhlIHRlbXBlcmF0ZSBoaWdobGFuZHMgYW5kIG1vdW50YWlucyBvZiBCcmF6aWwsIFBhcmFndWF5LCBVcnVndWF5LCBub3J0aGVybiBBcmdlbnRpbmEsIGFuZCBDb2xvbWJpYS4gRmVpam9hIGlzIGdyb3duIGZvciBpdCdzIGZydWl0cywgd2hpY2ggcmVzZW1ibGUgc21hbGwgZ3VhdmFzLCBhbmQgYXMgYW4gb3JuYW1lbnRhbC4gRmVpam9hcyBhcmUgYmVzdCBwbGFudGVkIGZyb20gZ3JhZnRlZCBzYXBsaW5ncyAoYXMgb3Bwb3NlZCB0byBzdGFydGluZyBmcm9tIHNlZWQpIGFuZCB3aWxsIG1hdHVyZSBpbnRvIGEgc3ByYXdsaW5nIHNocnViIGlmIG5vdCBwcnVuZWQuIFRoZXkgY2FuIGFsc28gYmUgZ3Jvd24gaW4gY29udGFpbmVycy4gVGhleSB3aWxsIHByb2R1Y2UgZnJ1aXQgd2l0aGluIDMtNCB5ZWFycyBvZiBiZWluZyB0cmFuc3BsYW50ZWQuIE1vc3QgRmVpam9hcyBhcmUgbm90IHNlbGYtZmVydGlsZS4gVGhlIGJyaWdodCByZWQgZmxvd2VycyByZXF1aXJlIHBvbGxpbmF0aW9uIGJ5IDItMyBGZWlqb2EgdHJlZXMgb2YgYW5vdGhlciB2YXJpZXR5IG5lYXJieS4gVGhlIHNtYWxsIGZydWl0IGFyZSBncmVlbiwgZWxsaXBzb2lkLCBhbmQgdGhlIHNpemUgb2YgYW4gZWdnLiBUaGV5IHRhc3RlIGxpa2UgYSBjcm9zcyBiZXR3ZWVuIHBpbmVhcHBsZSwgYXBwbGUsIGFuZCBtaW50LCBhbmQgaGF2ZSBhIGNsZWFyLCBnZWxhdGlub3VzIHNlZWQgcHVscCBhdCB0aGUgY2VudGVyIHN1cnJvdW5kZWQgYnkgYSBmaXJtZXIsIHNsaWdodGx5IGdyaXR0eSBvcGFxdWUgZmxlc2guIFRoZSBmcnVpdCBpcyBlYXRlbiByYXcgb3IgYWRkZWQgdG8gc21vb3RoaWVzLiBUaGUgZWRpYmxlIGZsb3dlciBwZXRhbHMgY2FuIGJlIGFkZGVkIHRvIHNhbGFkcy4gRnJ1aXQgaXMgYmVzdCB3aGVuIGFsbG93ZWQgdG8gcmlwZW4gb24gdGhlIHRyZWUuIEEgdGFycCBvciBsYXJnZSBjbG90aCBjYW4gYmUgaHVuZyBhcm91bmQgdGhlIHRyZWUgdG8gY2F0Y2ggZnJ1aXQgd2hlbiBpdCBmYWxscyBhbmQgcHJldmVudCBicnVpc2luZy4gRmVpam9hIHJlcXVpcmVzIGJldHdlZW4gMTAwLTIwMCBob3VycyBvZiBjaGlsbGluZyBkdXJpbmcgdGhlIHdpbnRlciBhbmQgcHJvZHVjZXMgdGFzdGllciBmcnVpdCBhdCBtb2RlcmF0ZSBzdW1tZXIgdGVtcGVyYXR1cmVzIGJldHdlZW4gMjUtMzLCsEMuIFN1bW1lciB0ZW1wZXJhdHVyZXMgYWJvdmUgMzLCsEMgY2FuIG5lZ2F0aXZlbHkgYWZmZWN0IGZydWl0IHNldC4gRmVpam9hIGlzIHNvbWV3aGF0IGRyb3VnaHQgdG9sZXJhbnQuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm00LnN0YXRpY2ZsaWNrci5jb20vMzk0NC8zMzIxNjk1MjczNF9jNjcwMWFjZjYwX3ouanBnIn0seyJuYW1lIjoibGVtb24iLCJkZXNjcmlwdGlvbiI6IlRoZSBMZW1vbiBpcyBhIHNtYWxsLCBldmVyZ3JlZW4gY2l0cnVzIHRyZWUgbmF0aXZlIHRvIEFzaWEgdGhhdCBwcm9kdWNlcyBlbGxpcHNvaWRhbCB5ZWxsb3cgZnJ1aXRzLiBJdCBpcyB0aGUgbW9zdCBjb2xkLXNlbnNpdGl2ZSBjaXRydXMgdHJlZSBhbmQgbmVlZHMgeWVhci1yb3VuZCB0ZW1wZXJhdHVyZXMgYmV0d2VlbiAxMy0yMcKwIEMuIFRyZWVzIHdpbGwgZW50ZXIgZG9ybWFuY3kgYXQgcHJvbG9uZ2VkIHBlcmlvZHMgYmVsb3cgMTPCsCBDLiBUd2lncyBoYXZlIHNoYXJwIHRob3JucyBhbmQgd2hpdGUgYmxvb21zLiBJdCBjYW4gYmUgZ3Jvd24gaW4gY29udGFpbmVycyBpbiBjb29sZXIgcmVnaW9ucywgYnV0IG5lZWRzIGZ1bGwgc3VuLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtMS5zdGF0aWNmbGlja3IuY29tLzExMC8yNTA5ODQwNjJfY2MzZDQ4NDJkN196LmpwZyJ9LHsibmFtZSI6IndhdGVyY3Jlc3MiLCJkZXNjcmlwdGlvbiI6IldhdGVyY3Jlc3MgaXMgYSBzZW1pLWFxdWF0aWMgdG8gYXF1YXRpYyBwZXJlbm5pYWwgcGxhbnQgaW4gdGhlIEJyYXNzaWNhIGZhbWlseSB3aG9zZSBsZWF2ZXMgYW5kIHN0ZW1zIGhhdmUgYSBjbGVhbiwgc2xpZ2h0bHkgcGVwcGVyeSB0YXN0ZS4gSW4gdGhlIHdpbGQsIFdhdGVyY3Jlc3MgZmF2b3JzIG1vZGVyYXRlbHkgY29vbCBjbGltYXRlcyBhbmQgZ3Jvd3MgcGFydGlhbGx5IHN1Ym1lcmdlZCBpbiBydW5uaW5nIHdhdGVyIGFuZCBmbG9vZGVkIGFyZWFzLiBJdCBpcyBvbmUgb2YgdGhlIG9sZGVzdCBrbm93biBsZWFmIHZlZ2V0YWJsZXMgZWF0ZW4gYnkgaHVtYW5zLiBXYXRlcmNyZXNzIGNhbiBiZSBjdWx0aXZhdGVkIGh5ZHJvcG9uaWNhbGx5LCBpbiBjb250YWluZXJzLCBvciBpbiBzb2lsIHRoYXQgaXMga2VwdCBjb25zdGFudGx5IHdldC4gSXQgY2FuIGJlIGhhcnZlc3RlZCBhcyBzcHJvdXRzIG9yIGxlYXZlcy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTIuc3RhdGljZmxpY2tyLmNvbS8xODgxLzQzNjMyMDIwMjU1XzliZWU5NWVlZGNfei5qcGcifSx7Im5hbWUiOiJOZXcgWmVhbGFuZCB5YW0iLCJkZXNjcmlwdGlvbiI6IllhbXMgZ3Jvd24gaW4gTmV3IFplYWxhbmQgb3JpZ2luYXRlIGZyb20gdGhlIFNvdXRoIEFtZXJpY2FuIEFuZGVzIHdoZXJlIHRoZXkgYXJlIGtub3duIGFzIG9jYS4gVGhlIHN3ZWV0IHR1YmVycyBhcmUgc21hbGwsIG9mdGVuIGFib3V0IHRoZSBzaXplIG9mIGEgdGh1bWIsIGFyZSBwaW5rLW9yYW5nZSBpbiBjb2xvdXIgYW5kIGhhdmUgYSBzbGlnaHRseSBzaGlueSBhbmQgcmliYmVkIHN1cmZhY2UuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vOTgwLzQxMzQ5ODk0ODY0XzJlOTU1MjQxNWZfei5qcGcifSx7Im5hbWUiOiJjaGF5b3RlIiwiZGVzY3JpcHRpb24iOiJDaGF5b3RlIGlzIGEgdGVuZGVyIHBlcmVubmlhbCBpbiB0aGUgQ3VjdXJiaXRhY2VhZSBmYW1pbHkgZ3Jvd24gZm9yIGl0cyBlZGlibGUgZ291cmRzLCByb290cywgc3RlbXMsIGFuZCBsZWF2ZXMuIFVubGlrZSBvdGhlciBjdWN1cmJpdHMgbGlrZSBzcXVhc2gsIGN1Y3VtYmVycywgYW5kIG1lbG9ucywgQ2hheW90ZSdzIHNtYWxsIGdvdXJkcyBoYXZlIGEgc2luZ2xlLCBsYXJnZSwgZmxhdHRlbmVkIHNlZWQgb3IgcGl0LiBTb21lIHZhcmlldGllcyBoYXZlIHNwaW55IGZydWl0cy4gQ2hheW90ZSBpcyBuYXRpdmUgdG8gTWVzb2FtZXJpY2EgYW5kIHRocml2ZXMgaW4gYSBzdWJ0cm9waWNhbCB0byB0cm9waWNhbCBjbGltYXRlLCBhbHRob3VnaCBpdCBjYW4gYmUgZ3Jvd24gaW4gb3RoZXIgcmVnaW9ucyBpbiBjb250YWluZXJzLiBJdCBuZWVkcyAxMjAtMTUwIGZyb3N0LWZyZWUgZGF5cyB0byByZWFjaCBoYXJ2ZXN0LiBMaWtlIGN1Y3VtYmVycywgaXQgaGFzIGEgc3ByYXdsaW5nIGdyb3d0aCBwYXR0ZXJuIGFuZCBiZW5lZml0cyBmcm9tIHRyZWxsaXNpbmcgLSBmcnVpdCB3aWxsIHJvdCBpZiBpdCBzaXRzIG9uIHRoZSBzb2lsLiBJdCdzIHBhbGUgZ3JlZW4gZnJ1aXQgY2FuIGJlIDEwLTIwY20gbG9uZyBhbmQgcmVzZW1ibGVzIGEgZmxhdHRlbmVkLCB3cmlua2xlZCBwZWFyLiBJdCdzIGdyZWVuIHRvIHdoaXRlIGZsZXNoIGhhcyBhIG1pbGQgdGFzdGUgbGlrZSBhIGNyb3NzIGJldHdlZW4gYSBwb3RhdG8gYW5kIGEgY3VjdW1iZXIuIEl0IGlzIHVzdWFsbHkgbGlnaHRseSBjb29rZWQgbGlrZSBzdW1tZXIgc3F1YXNoLiBUaGUgdHViZXJzIGFyZSBzdGFyY2h5IGFuZCBlYXRlbiBsaWtlIHBvdGF0b2VzLiBUaGUgc2hvb3RzIGFuZCBoZWFydC1zaGFwZWQgbGVhdmVzIGNhbiBiZSBhZGRlZCB0byBzYWxhZHMgYW5kIHN0aXItZnJpZXMuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU5ZDNkMTg5MzViYzFmMDAwNDAwMDI1Ny5qcGc/MTUwNzA1Mzk1OSJ9LHsibmFtZSI6Ik5ldyBaZWFsYW5kIHNwaW5hY2giLCJkZXNjcmlwdGlvbiI6Ik5ldyBaZWFsYW5kIFNwaW5hY2ggaXMgYSB3YXJtLXdlYXRoZXIgc3BpbmFjaCBhbHRlcm5hdGl2ZSB0aGF0IGlzIG5vdCBkaXJlY3RseSByZWxhdGVkIHRvIHNwaW5hY2gsIGJ1dCBoYXMgYSBzaW1pbGFyIGZsYXZvciBhbmQgdGV4dHVyZS4gVGhlIHBsYW50IGhhcyBhIGJ1c2h5LCBzcHJlYWRpbmcgaGFiaXQgYW5kIHBvaW50ZWQsIHN1Y2N1bGVudCwgYnJpZ2h0IGdyZWVuIGxlYXZlcy4gTGVhdmVzIGNhbiBiZSBlYXRlbiBmcmVzaCBpbiBzYWxhZHMgb3IgY29va2VkIGxpa2Ugc3BpbmFjaC4gVW5saWtlIHNwaW5hY2gsIE5ldyBaZWFsYW5kIFNwaW5hY2ggdGhyaXZlcyBpbiB3YXJtIHRlbXBlcmF0dXJlcyBhbmQgd2lsbCBub3Qgc3Vydml2ZSB0aGUgZmlyc3QgaGFyZCBmcm9zdC4gU2VlZHMgZ2VybWluYXRlIHNsb3dseSBhbmQgYmVuZWZpdCBmcm9tIGJlaW5nIHNvYWtlZCBiZWZvcmUgcGxhbnRpbmcuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vOTA3LzQxNjEwMDgxNzcxXzhiZGJmZWVlZDZfei5qcGcifSx7Im5hbWUiOiJmbGF0IGxlYWYgcGFyc2xleSIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDg1NjI3NDE1NDFfMzFkYjIxMjcyYV96LmpwZyJ9LHsibmFtZSI6ImljZWJlcmcgbGV0dHVyZSIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDkzMzc3MTAwMDhfMmNjNjgyNmZhOF96LmpwZyJ9LHsibmFtZSI6ImFzcGFyYWd1cyIsImRlc2NyaXB0aW9uIjoiUGVyZW5uaWFsIHNwcmluZyB2ZWdldGFibGUgb2Z0ZW4gc293biBmcm9tIGNyb3ducy4gVGhlIHZlZ2V0YWJsZSBoYXMgYSBtaWxkIGZsYXZvciB3aXRoIGVhcnRoeSB1bmRlcnRvbmVzLiBXaGVuIG1hdHVyZSBhbmQgcmVwcm9kdWNpbmcsIHRoZSBwbGFudCBjcmVhdGVzIHRhbGwsIHN0b3V0IHN0ZW1zIHdpdGggZmVhdGhlcnkgZm9saWFnZSBhbmQgc21hbGwgcmVkIGJlcnJpZXMuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQ5MzE1MTI2NDc3X2VjNTJhODRiMDVfei5qcGcifSx7Im5hbWUiOiJjYXllbm5lIHBlcHBlciIsImRlc2NyaXB0aW9uIjoiQ2F5ZW5uZSBwZXBwZXJzIGFyZSBhIGN1bHRpdmFyIG9mIENhcHNpY3VtIGFubnV1bS4gVGhleSBhcmUgbWVtYmVycyBvZiB0aGUgbmlnaHRzaGFkZSBmYW1pbHksIFNvbGFuYWNlYWUsIGFuZCByZWxhdGVkIHRvIHRvbWF0b2VzIGFuZCBlZ2dwbGFudC4gVGhlIHVwcmlnaHQgcGxhbnRzIHByb2R1Y2UgbG9uZywgdGhpbiwgcmVkIGZydWl0IHRoYXQgY2FuIGJlIHVwIHRvIDI1Y20gbG9uZy4gQ2F5ZW5uZSBwZXBwZXJzIGhhdmUgYSBTY292aWxsZSByYXRpbmcgb2YgMzAsMDAwIHRvIDUwLDAwMCB1bml0cyBhbmQgYXJlIHNsaWdodGx5IGhvdHRlciB0aGFuIGphbGFwZW5vcy4gVGhleSBhcmUgZ2VuZXJhbGx5IGRyaWVkIGFuZCBncm91bmQgdG8gbWFrZSBjYXllbm5lIHNwaWNlLCBidXQgdGhleSBjYW4gYWxzbyBiZSB1c2VkIHdob2xlIG9yIGluIGEgdGhpbiwgdmluZWdhci1iYXNlZCBzYXVjZS4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDk0Mjc1NDQ4NzNfMGQ3ODVmY2U4MF96LmpwZyJ9LHsibmFtZSI6ImZhdmEgYmVhbiIsImRlc2NyaXB0aW9uIjoiVGhlIGZhdmEsIG9yIGJyb2FkIGJlYW4sIGlzIGEgc3BlY2llcyBvZiBmbG93ZXJpbmcgcGxhbnQgaW4gdGhlIHZldGNoIGFuZCBwZWEgZmFtaWx5IEZhYmFjZWFlLiBVbmxpa2UgbW9zdCBiZWFucywgZmF2YSBiZWFucyB0aHJpdmUgaW4gY29vbGVyIHdlYXRoZXIgYW5kIGRvIG5vdCByZXF1aXJlIHRyZWxsaXNpbmcuIFRoZXkgc2hvdWxkIGJlIHBsYW50ZWQgaW4gZWFybHkgc3ByaW5nIGFzIHNvb24gYXMgdGhlIHNvaWwgY2FuIGJlIHdvcmtlZC4gVGhlIGJyb2FkLCBsZWF0aGVyeSBwb2RzIGNvbnRhaW4gMy04IGJlYW5zIGFuZCBncm93IG9uIHN0aWZmIHN0ZW1zIHRoYXQgY2FuIHJlYWNoIGhlaWdodHMgb2YgMS44bS4gIEZhdmEgYXJlIHBsYW50ZWQgZm9yIHRoZWlyIGVkaWJsZSBiZWFucywgb3IgYXMgYSBjb3ZlciBjcm9wIHRvIHJlZHVjZSB3aW50ZXIgZXJvc2lvbiBhbmQgaW5jcmVhc2Ugbml0cm9nZW4gaW4gdGhlIHNvaWwuIElub2N1bGFudHMgY2FuIGluY3JlYXNlIHlpZWxkIGFuZCBuaXRyb2dlbiBwcm9kdWN0aW9uLiBUaGUgcG9kcyBhcmUgY29tbW9ubHkgaGFydmVzdGVkIHdoaWxlIHlvdW5nLCB3aGVuIHRoZXkgYXJlIGFib3V0IDE1Y20gbG9uZy4gRmF2YSBiZWFucyBhcmUgZWF0ZW4gaW4gYSBteXJpYWQgb2Ygd2F5czogcmF3IGluIHNhbGFkcywgZ3JpbGxlZCwgcm9hc3RlZCwgZnJpZWQsIHB1cmVlZCwgYW5kIG1vcmUuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQ5MTYxMzQzMDMyXzAwYTE0MmUyNDNfei5qcGcifSx7Im5hbWUiOiJib2sgY2hveSIsImRlc2NyaXB0aW9uIjoiQSB0eXBlIG9mIENoaW5lc2UgY2FiYmFnZSB0aGF0IGRvZXMgbm90IGZvcm0gYSBoZWFkLiBJdCBoYXMgc21vb3RoLCBkYXJrIG9yIGxpZ2h0IGdyZWVuIGxlYWYgYmxhZGVzIGFuZCBjcmlzcCB3aGl0ZSBzdGFsa3MgdGhhdCBmb3JtIGEgY2x1c3RlciBzaW1pbGFyIHRvIG11c3RhcmQgZ3JlZW5zIG9yIGNlbGVyeS4gSXQgaXMgb2Z0ZW4gaGFydmVzdGVkIHdoaWxlIHN0aWxsIHNtYWxsIGFuZCB0ZW5kZXIsIHdoZW4gaXQgaXMgYXJvdW5kIDEwY20gaGlnaC4gV2ludGVyIGhhcmR5LiBSb3cgc3BhY2luZyBkZXBlbmRzIG9uIGRlc2lyZWQgaGFydmVzdCBzaXplLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGM5YjMzOWY1NzdhNDAwMDQwMDAwYWYuanBnPzE0ODk2MTM2MTIifSx7Im5hbWUiOiJzcHJpbmcgb25pb24iLCJkZXNjcmlwdGlvbiI6IlNwcmluZyBvbmlvbnMgcmVzZW1ibGUgc2NhbGxpb25zIGluIGFwcGVhcmFuY2UgYW5kIGZsYXZvciwgYnV0IHRoZXkgYXJlIGFjdHVhbGx5IHZlcnkgeW91bmcgc3RvcmFnZSBvbmlvbnMuIFllbGxvdywgcmVkLCBvciB3aGl0ZSBzdG9yYWdlIG9uaW9ucyBhcmUgcHVsbGVkIG91dCBvZiB0aGUgZ3JvdW5kIGJlZm9yZSB0aGUgc3RhbmRhcmQgaGFydmVzdCBkYXRlLCB3aGVuIHRoZWlyIHNraW5zIGFyZSBzdGlsbCB0aGluIGFuZCB0aGV5IGFyZSBtaWxkIGluIGZsYXZvci4gVGhlaXIgYnVsYnMgYW5kIGdyZWVucyBjYW4gYmUgZWF0ZW4gZnJlc2ggb3IgY29va2VkLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGNmMzNiMmFlYTkzZDAwMDQwMDAwMTcuanBnPzE0ODk5NzQxODkifSx7Im5hbWUiOiJlbmRpdmUiLCJkZXNjcmlwdGlvbiI6IkN1cmx5IEVuZGl2ZSBpcyBhIG5hcnJvdy1sZWF2ZWQgbWVtYmVyIG9mIHRoZSBDaGljb3J5IGZhbWlseSAodmVyc3VzIEVzY2Fyb2xlLCB3aGljaCBpcyBicm9hZC1sZWF2ZWQpLiBJdCBncm93cyBpbiBsb29zZSBoZWFkcyBvZiBuYXJyb3csIGdyZWVuLCBsYWNleSBsZWF2ZXMgd2l0aCBjdXJsZWQgdGlwcy4gVGhlIGhlYWQgaXMgb2Z0ZW4gdGllZCB0b2dldGhlciB3aGVuIGl0IGlzIDI1Y20gdGFsbCB0byBibGFuY2ggdGhlIGlubmVyIGxlYXZlcy4gVGhlIG91dGVyIGxlYXZlcyBoYXZlIGEgc2xpZ2h0bHkgYml0dGVyIGZsYXZvciwgYW5kIHRoZSBpbm5lciBsZWF2ZXMgaGF2ZSBhIHN1YnRsZSBzd2VldG5lc3MgYW5kIG1vcmUgZGVsaWNhdGUgdGV4dHVyZS4gQWxsIG9mIHRoZSBsZWF2ZXMgc3dlZXRlbiBzbGlnaHRseSB3aXRoIGZyb3N0IG9yIGNvb2tpbmcuIEN1cmx5IEVuZGl2ZSBjYW4gYmUgZWF0ZW4gcmF3IGluIHNhbGFkcyBvciBjb29rZWQgaW4gc291cHMsIHN0ZXdzLCBhbmQgb3RoZXIgZGlzaGVzLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQ0NzkvMzc0NDU3Njk1NDRfMWU3Y2U1ZDYzOV96LmpwZyJ9LHsibmFtZSI6InNoYWxsb3QiLCJkZXNjcmlwdGlvbiI6IlNoYWxsb3RzIGFyZSBhIHR5cGUgb2Ygc21hbGwgb25pb24gd2l0aCBhIHN1YnRsZSwgZGlzdGluZ3Vpc2hlZCBmbGF2b3IuIFRoZSBidWxiIGlzIGNvdmVyZWQgaW4gcGFwZXJ5IHJlZCBza2luIHRpbnRlZCBydXN0LCBnb2xkLCBvciBwdXJwbGUgYW5kIGhhcyBhIHRhcGVyZWQgb2Jsb25nIHNoYXBlIHdpdGggbXVsdGlwbGUgY2xvdmVzLiBUaGV5IGNhbiBiZSB1c2VkIGZyZXNoIG9yIGRyaWVkIGluIGEgdmFyaWV0eSBvZiBkaXNoZXMuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm01LnN0YXRpY2ZsaWNrci5jb20vNDgzNy8zMzAwMjQyNTUyOF9hOWEzNGJkNWRhX3ouanBnIn0seyJuYW1lIjoic25vdyBwZWEiLCJkZXNjcmlwdGlvbiI6IlNub3cgUGVhcyBhcmUgYSB2YXJpZXR5IG9mIHBlYSB0aGF0IGNhbiBiZSBlYXRlbiB3aG9sZSBpbiB0aGUgcG9kIHdoaWxlIHN0aWxsIHVucmlwZS4gVGhlIGZsYXQsIHN3ZWV0LCBjcmlzcCBwb2RzIGFyZSBlYXRlbiBmcmVzaCBhbmQgYWRkZWQgdG8gc2FsYWRzIGFuZCBzdGlyLWZyaWVzLiBMaWtlIG90aGVyIHBlYXMsIFNub3cgUGVhcyBkbyBiZXN0IGluIGNvb2xlciB3ZWF0aGVyIGFuZCBiZW5lZml0IGZyb20gaW5vY3VsYXRpb24ganVzdCBiZWZvcmUgcGxhbnRpbmcuIFNvbWUgdmFyaWV0aWVzIHJlcXVpcmUgdHJlbGxpc2luZy4gSWYgdHJlbGxpc2luZywgaW5jcmVhc2Ugcm93IHNwYWNpbmcgdG8gMS4yIG0uIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzVhMWVmZTIxYmYyN2Q3MDAwNDAwMDAwMi5qcGc/MTUxMTk4MDU3NCJ9LHsibmFtZSI6InRvbWF0aWxsbyIsImRlc2NyaXB0aW9uIjoiVGhlIHRvbWF0aWxsbyBpcyBhIG1lbWJlciBvZiB0aGUgTmlnaHRzaGFkZSBmYW1pbHkuIFRoZSBwbGFudCBiZWFycyBhIHJlc2VtYmxhbmNlIHRvIHRvbWF0byBwbGFudHMgYW5kIGJlbmVmaXRzIGZyb20gcHJ1bmluZyBhbmQgdHJlbGxpc2luZy4gVGhlIGZydWl0IG9mIHRoZSB0b21hdGlsbG8gcGxhbnQgaXMgc21hbGwsIHJvdW5kLCBhbmQgZ3JlZW4gb3IgcHVycGxlLiBJdCBpcyBjb3ZlcmVkIGluIGEgcGFwZXIgaHVzayB0aGF0IHNwbGl0cyBvcGVuIHdoZW4gdGhlIGZydWl0IGlzIHJlYWR5IGZvciBoYXJ2ZXN0LiBUb21hdGlsbG9zIGFyZSBuYXRpdmUgdG8gTWV4aWNvIGFuZCBjYW4gYmUgZWF0ZW4gcmF3IG9yIGNvb2tlZC4gVGhleSBoYXZlIGEgY2l0cnVzeSwgdGFydCwgYW5kIHRhbmd5IGxlbW9uIGZsYXZvci4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNTRhYjAwZTE2NjM1MzkwMDAyMDAwMDAwLmpwZz8xNDIwNDkzMDIwIn0seyJuYW1lIjoicGVycGV0dWFsIHNwaW5hY2giLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm0zLnN0YXRpY2ZsaWNrci5jb20vMjg0OC8zMjcwMzY5NTU2M18yYzk1YTg4OTQ2X3ouanBnIn0seyJuYW1lIjoiaGFiYW5lcm8gcGVwcGVyIiwiZGVzY3JpcHRpb24iOiJIYWJhbmVyb3MgYXJlIGEgdmVyeSBob3QgY2hpbGkgcGVwcGVyIHZhcmlldHkgdGhhdCBoYXZlIGEgcmF0aW5nIG9mIDEwMCwwMDAtMzUwLDAwMCBTY292aWxsZSB1bml0cyBhbmQgYSBmbG9yYWwgYXJvbWEuIFRoZSBmcnVpdCBpcyBncmVlbiB3aGVuIHVucmlwZS4gVmFyaW91cyBjdWx0aXZhcnMgdHVybiBvcmFuZ2UsIHJlZCwgd2hpdGUsIGJyb3duLCB5ZWxsb3csIG9yIHB1cnBsZSBhcyB0aGV5IHJpcGVuLiBSaXBlIGZydWl0IGFyZSB0eXBpY2FsbHkgMi02IGNtIGxvbmcuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQwNzQyNTcxMzQzXzQ2YjQ4MDllMTRfei5qcGcifSx7Im5hbWUiOiJzb3JyZWwiLCJkZXNjcmlwdGlvbiI6IlNvcnJlbCBpcyBhIGhhcmR5IHBlcmVubmlhbCBoZXJiIHRoYXQgcHJvZHVjZXMgc29tZSBvZiB0aGUgZWFybGllc3Qgc3ByaW5nIGFuZCBsYXRlc3QgZmFsbCBncmVlbnMuIFRoZSBwbGFudCBoYXMgZGVlcCByb290cyBhbmQgbG9uZywgd2lkZSwgdGFwZXJpbmcgbGVhdmVzIHdpdGgganVpY3kgc3RlbXMuIExlYXZlcyBoYXZlIGEgc291ciwgdGFuZ3ksIGxlbW9ueSB0YXN0ZSBhbmQgYXJlIGRlbGljaW91cyBpbiBzYWxhZHMsIHNvdXBzLCBhbmQgc2FuZHdpY2hlcy4gSW4gdGhlIHN1bW1lciwgU29ycmVsIHdpbGwgYm9sdCwgcHJvZHVjaW5nIHJlZGRpc2gtZ3JlZW4gZmxvd2VycyBhbmQgc2V0dGluZyBzZWVkLiBUaGlzIGJvbHRpbmcgY2FuIGJlIHJlZHVjZWQgYnkgaGFydmVzdGluZyBjb25zaXN0ZW50bHkuIEV2ZW4gaWYgU29ycmVsIHNldHMgc2VlZCBpbiB0aGUgc3VtbWVyLCBpdCB3aWxsIHByb2R1Y2UgYW5vdGhlciBzZXQgb2YgZWRpYmxlIGxlYXZlcyBpbiB0aGUgZmFsbC4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNWExZjAxNWViZjI3ZDcwMDA0MDAwMDAzLmpwZz8xNTExOTgxNDAyIn0seyJuYW1lIjoiYnV0dGVyaGVhZCBsZXR0dWNlIiwiZGVzY3JpcHRpb24iOm51bGwsImltYWdlIjoiaHR0cHM6Ly9mYXJtOC5zdGF0aWNmbGlja3IuY29tLzc4NTkvMzI1MDQ5ODU1NjdfZmZkMzgyYzhmYl96LmpwZyJ9LHsibmFtZSI6ImJyYW5keXdpbmUgdG9tYXRvIiwiZGVzY3JpcHRpb24iOiJUaGUgQnJhbmR5d2luZSB0b21hdG8gcGxhbnQgaXMgYW4gaGVpcmxvb20gY3VsdGl2YXIgb2YgdGhlIHNwZWNpZXMsIHdpdGggbGFyZ2UgcG90YXRvLWxlYXZlZCBmb2xpYWdlIGFuZCB3aGljaCBiZWFycyBsYXJnZSBwaW5rIGJlZWZzdGVhay1zaGFwZWQgZnJ1aXQsIHBvcHVsYXJseSBjb25zaWRlcmVkIGFtb25nIHRoZSBiZXN0IHRhc3RpbmcgYXZhaWxhYmxlLiAgQnJhbmR5d2luZSB0b21hdG9lcyBjYW4gYmVhciBmcnVpdCB1cCB0byAxLjUgbGJzICgwLjcga2cpLCByZXF1aXJpbmcgODAgdG8gMTAwIGRheXMgdG8gcmVhY2ggbWF0dXJpdHksIG1ha2luZyBpdCBhbW9uZyB0aGUgc2xvd2VzdCBtYXR1cmluZyB2YXJpZXRpZXMgb2YgY29tbW9uIHRvbWF0byBjdWx0aXZhcnMuIEJyYW5keXdpbmUgaGFzIGJlZW4gZGVzY3JpYmVkIGFzIGhhdmluZyBhIFwiZ3JlYXQgdG9tYXRvZXkgZmxhdm9yXCIiLCJpbWFnZSI6Imh0dHBzOi8vZmFybTY2LnN0YXRpY2ZsaWNrci5jb20vNjU1MzUvNDk2NjQ0MzI3MzNfMjQxNjgwODRlZl96LmpwZyJ9LHsibmFtZSI6Im11c3RhcmQiLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vODIzLzQxMjk5ODkyMzc1Xzg0NGM4YmUyYzZfei5qcGcifSx7Im5hbWUiOiJydW5uZXIgYmVhbiIsImRlc2NyaXB0aW9uIjoiVGhlIFJ1bm5lciwgb3IgTXVsdGlmbG9yYSwgQmVhbiBpcyBhIHZpbmluZyBwbGFudCBpbiB0aGUgRmFiYWNlYWUgKGxlZ3VtZSkgZmFtaWx5IHRoYXQgaXMgbmF0aXZlIHRvIENlbnRyYWwgQW1lcmljYS4gSXQgaXMgc29tZXRpbWVzIGNhbGxlZCB0aGUgQnV0dGVyIEJlYW4sIHdoaWNoIGNhbiBhbHNvIHJlZmVyIHRvIHRoZSBMaW1hIEJlYW4sIGEgc2VwYXJhdGUgc3BlY2llcy4gVGhlIFJ1bm5lciBCZWFuIGRpZmZlcnMgZnJvbSBvdGhlciBiZWFucyBpbiB0aGF0IGl0IGNhbiBiZSBncm93biBhcyBhIHBlcmVubmlhbCB3aGVyZSB0aGUgZ3JvdW5kIGRvZXMgbm90IGZyZWV6ZS4gUnVubmVyIEJlYW5zIGFyZSBncm93biBmb3IgdGhlaXIgZWRpYmxlIGJlYW5zIGFuZCBhcyBhbiBvcm5hbWVudGFsOiBwbGFudHMgcHJvZHVjZSBicmlsbGlhbnQgcmVkIGZsb3dlcnMgdGhhdCBhdHRyYWN0IGh1bW1pbmdiaXJkcyBhbmQgbXVsdGljb2xvcmVkIHNlZWRzLiBTb21lIHZhcmlldGllcyBoYXZlIHdoaXRlIGZsb3dlcnMuIFRoZSBzZWVkIHBvZHMgaGF2ZSBhIGtuaWZlLWxpa2Ugc2hhcGUgYW5kIGFyZSB1c3VhbGx5IGdyZWVuLCBidXQgc29tZSBwdXJwbGUgY3VsdGl2YXJzIGV4aXN0LiBQb2RzIGFyZSAxNS0zMGNtIGxvbmcgYW5kIGNvbnRhaW4gNi0xMCAyLjVjbSBzZWVkcy4gRGlmZmVyZW50IHZhcmlldGllcyBoYXZlIGRpZmZlcmVudCBjb2xvcmVkIHNlZWRzLiBTZWVkcyBjYW4gZWF0ZW4gZnJlc2ggb3IgYXMgZHJpZWQgYmVhbnMsIGJ1dCBtdXN0IGJlIGNvb2tlZCB0byByZW1vdmUgdG94aW5zLiBCbG9vbXMgY2FuIGJlIGFkZGVkIHRvIHNhbGFkcy4gWW91bmcgcG9kcyBjYW4gYmUgY29va2VkIGxpa2UgZ3JlZW4gYmVhbnMuIFJvb3RzIGFyZSBlYXRlbiBieSBpbmRpZ2Vub3VzIHBlb3BsZXMgaW4gQ2VudHJhbCBBbWVyaWNhLiBSdW5uZXIgQmVhbnMgYmVuZWZpdCBmcm9tIHRyZWxsaXNpbmcuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzVhMWM5ZWIwNmRkNmMwMDAwNDAwMDAwMy5qcGc/MTUxMTgyNTA1NSJ9LHsibmFtZSI6IkNvbW1vbiBGaWciLCJkZXNjcmlwdGlvbiI6IlRoZSBmaWcgaXMgYSBwZXJlbm5pYWwsIGZsb3dlcmluZywgZGVjaWR1b3VzIHNocnViIG9yIHNtYWxsIHRyZWUgaW4gdGhlIE11bGJlcnJ5IChNb3JhY2VhZSkgZmFtaWx5LiBGaWdzIGFyZSBuYXRpdmUgdG8gdGhlIE1pZGRsZSBFYXN0IGFuZCB3ZXN0ZXJuIEFzaWEgYW5kIGFyZSBncm93biBmb3IgdGhlaXIgZnJ1aXQsIHdoaWNoIGFyZSBhbHNvIGtub3duIGFzIGZpZ3MsIGFuZCBhcyBhbiBvcm5hbWVudGFsIHBsYW50LiBJbiB0aGUgcmlnaHQgY2xpbWF0ZSwgdGhleSBjYW4gZ3JvdyBhcyB0YWxsIGFzIDEwIG1ldGVycywgYnV0IHRoZXkgY2FuIGFsc28gYmUgZ3Jvd24gaW4gY29udGFpbmVycyBhbmQgYnJvdWdodCBpbmRvb3JzIGluIHRoZSB3aW50ZXIgaW4gY29vbGVyIHJlZ2lvbnMuIFRoZSBwbGFudCBoYXMgc21vb3RoIHdoaXRlIGJhcmssIGRlZXBseSBsb2JlZCBmcmFncmFudCBsZWF2ZXMsIGFuZCBtdWx0aXBsZSwgc3ByZWFkaW5nIHRydW5rcy4gRmxvd2VycyBhcmUgb2Z0ZW4gcG9sbGluYXRlZCBieSBmaWcgd2FzcHMsIGFuZCBkZXZlbG9wIGludG8gMy01Y20gbG9uZyBmcnVpdCB3aXRoIGdyZWVuIHNraW4gdGhhdCwgZGVwZW5kaW5nIG9uIHRoZSB2YXJpZXR5LCBjYW4gcmlwZW4gdG8gYSBkZWVwIHB1cnBsZS4gRmlncyBuZWVkIHRvIHJpcGVuIGZ1bGx5IG9uIHRoZSB0cmVlIGJlZm9yZSBoYXJ2ZXN0LiBUaGV5IGFyZSByaXBlIHdoZW4gdGhleSBkcm9vcCBhbmQgYXJlIHNvZnQgdG8gdGhlIHRvdWNoLiBJZiB0aGV5IG9vemUgYSB3aGl0ZSBzYXAgd2hlbiB0aGV5IGFyZSBwdWxsZWQgZnJvbSB0aGUgdHJlZSwgdGhleSBhcmUgbm90IHJpcGUuIEZpZyB0cmVlcyBoYXZlIGFuIGFnZ3Jlc3NpdmUgcm9vdCBzeXN0ZW0gdGhhdCBzZWFyY2hlcyBmb3IgZ3JvdW5kd2F0ZXIgaW4gYXF1aWZlcnMsIHJhdmluZXMsIGFuZCBjcmFja3MgaW4gcm9ja3MuIE9uY2UgZXN0YWJsaXNoZWQsIHRoZXkgY2FuIHRvbGVyYXRlIHNlYXNvbmFsIGRyb3VnaHQgYW5kIGFyZSBhZmZlY3RlZCBieSBmZXcgcGVzdHMuIEZpZ3MgYXJlIHByb3BhZ2F0ZWQgdGhyb3VnaCBjdXR0aW5ncyBvciBkaXZpc2lvbiwgYW5kIGdlbmVyYWxseSBwcm9kdWNlIGZydWl0IHRoZSB5ZWFyIGFmdGVyIHBsYW50aW5nLiBJbiB3YXJtZXIgY2xpbWF0ZXMsIHRoZXkgY2FuIHByb2R1Y2UgdHdvIGNyb3BzLCBvbmUgaW4gZWFybHkgc3VtbWVyLCBhbmQgdGhlIG90aGVyIGluIGZhbGwuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU5ZTY5OTYzYTRiZWViMDAwNDAwMDBjOS5qcGc/MTUwODI4NDc2NSJ9LHsibmFtZSI6ImNhdG5pcCIsImRlc2NyaXB0aW9uIjoiQ2F0bmlwIGlzIGEgaGVyYmFjZW91cyBwZXJlbm5pYWwgaW4gdGhlIG1pbnQgZmFtaWx5LCBMYW1pYWNlYWUuIEl0IHJlc2VtYmxlcyBtaW50LCB3aXRoIHRyaWFuZ3VsYXIsIGNvYXJzZS10b290aGVkIGxlYXZlcywgc3F1YXJlIHN0ZW1zLCBhbmQgc21hbGwsIHBpbmssIHdoaXRlLCBwdXJwbGUsIG9yIGJsdWUgZmxvd2Vycy4gTGlrZSBtaW50LCBpdCBjYW4gYmVjb21lIGludmFzaXZlLCBzbyBpdCBpcyBiZXN0IHBsYW50ZWQgaW4gY29udGFpbmVycy4gQ2F0bmlwIGlzIHVzZWQgYW4gb3JuYW1lbnRhbCwgdG8gbWFrZSBoZXJiYWwgdGVhLCBhbmQgYXMgYSBjb21wYW5pb24gcGxhbnQuIEl0IGlzIGRlZXItcmVzaXN0YW50IGFuZCBhdHRyYWN0cyBiZW5lZmljaWFsIGluc2VjdHMgbGlrZSBiZWVzIGFuZCBidXR0ZXJmbGllcyBhbmQgZGV0ZXJzIHBlc3RzIGxpa2UgZmxlYSBiZWV0bGVzLCBKYXBhbmVzZSBiZWV0bGVzLCBhcGhpZHMsIHdlZXZpbHMsIGFudHMsIHNxdWFzaCBidWdzIGFuZCBtaWNlLiBJdCBhbHNvIGF0dHJhY3RzIGNhdHMgYmVjYXVzZSBpdCBjb250YWlucyB0aGUgY2hlbWljYWwgbmVwZXRhbGFjdG9uZSwgd2hpY2ggY2FuIGNhdXNlIGNhdHMgdG8gZW50ZXIgYSBicmllZiBzdGF0ZSBvZiBldXBob3JpYS4iLCJpbWFnZSI6Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9vcGVuZmFybS1wcm9qZWN0L3Byb2R1Y3Rpb24vbWVkaWEvcGljdHVyZXMvYXR0YWNobWVudHMvNTliYzUxMWM5YTE0NjIwMDA0MDAwMGM5LmpwZz8xNTA1NTEzNzU0In0seyJuYW1lIjoibWl6dW5hIiwiZGVzY3JpcHRpb24iOiJNaXp1bmEgaXMgYSBjb29sIHdlYXRoZXIgc2FsYWQgZ3JlZW4gaW4gdGhlIEJyYXNzaWNhIGZhbWlseS4gSXQgaGFzIGEgbWlsZCwgc2xpZ2h0bHkgcGVwcGVyeSB0YXN0ZSBhbmQgaGVhdmlseSBzZXJyYXRlZCwgZmVhdGhlcnkgbGVhdmVzLiBMZWF2ZXMgY2FuIGJlIGhhcnZlc3RlZCBhdCB0aGVpciBiYWJ5IG9yIGFkdWx0IHNpemVzLCBiZXR3ZWVuIDcgYW5kIDE1Y20uIEJlIHN1cmUgdG8gaGFydmVzdCBiZWZvcmUgdGhlIHBsYW50IGZsb3dlcnMuIExlYXZlcyBjYW4gYmUgZWF0ZW4gcmF3IGluIHNhbGFkcyBhbmQgb24gc2FuZHdpY2hlcywgc2F1dMOpZWQsIG9yIHN0aXItZnJpZWQuIiwiaW1hZ2UiOm51bGx9LHsibmFtZSI6ImJ1dHRlcm51dCBzcXVhc2giLCJkZXNjcmlwdGlvbiI6IkJ1dHRlcm51dCBzcXVhc2ggaXMgYSB3aW50ZXIgc3F1YXNoIGN1bHRpdmFyIHRoYXQgcHJvZHVjZXMgbG9uZyBzcXVhc2ggd2l0aCBzbW9vdGgsIHRhbi15ZWxsb3cgc2tpbiBhbmQgYSByb3VuZGVkIGNvbXBhcnRtZW50IG9mIHNlZWRzIGF0IHRoZSBib3R0b20uIEZsZXNoIGlzIGRlZXAgb3JhbmdlIGFuZCBmaXJtIHdpdGggYSBzd2VldCwgbnV0dHkgdGFzdGUuIEJ1dHRlcm51dCBzcXVhc2ggYmVjb21lcyBkZWVwZXIgb3JhbmdlIGFuZCBzd2VldGVyIGFuZCByaWNoZXIgYXMgaXQgcmlwZW5zLiBMaWtlIG90aGVyIHNxdWFzaCwgaXQgZ3Jvd3Mgb24gc3ByYXdsaW5nIHZpbmVzLiBJZiBzdGFydGluZyBzZWVkcyBpbmRvb3JzLCB1c2UgcGVhdCBwb3RzIGFuZCBkaXJlY3RseSB0cmFuc3BsYW50IHRoZW0gaW50byB0aGUgc29pbCB0byByZWR1Y2Ugcm9vdCBkaXN0dXJiYW5jZS4gSGFydmVzdCBzcXVhc2ggYmVmb3JlIGFueSBoYXJkIGZyb3N0cyBhbmQgY3VyZS4gV2ludGVyIHNxdWFzaCBjYW4gYmUgc3RvcmVkIGZvciB1cCB0byAzIG1vbnRocyBpbiBhIGNvb2wsIGRyeSwgd2VsbC12ZW50aWxhdGVkIHBsYWNlLiIsImltYWdlIjoiaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL29wZW5mYXJtLXByb2plY3QvcHJvZHVjdGlvbi9tZWRpYS9waWN0dXJlcy9hdHRhY2htZW50cy81OGM5YjRjMGY1NzdhNDAwMDQwMDAwYjMuanBnPzE0ODk2MTQwMDkifSx7Im5hbWUiOiJjYXBlIGdvb3NlYmVycnkiLCJkZXNjcmlwdGlvbiI6IkNhcGUgR29vc2ViZXJyaWVzLCBvciBQaHlzYWxpcywgYXJlIGEgcGxhbnQgc3BlY2llcyBpbiB0aGUgZ2VudXMgUGh5c2FsaXMgYW5kIGZhbWlseSBTb2xhbmFjZWFlLiBUaGV5IGhhdmUgc2xpZ2h0bHkgdmVsdmV0eSBoZWFydC1zaGFwZWQgbGVhdmVzIGFuZCBwcm9kdWNlIHNtb290aCBicmlnaHQgeWVsbG93IG9yIG9yYW5nZSBiZXJyaWVzIHdyYXBwZWQgaW4gYSBwYXBlcnkgaHVzayBvciBjYWx5eC4gVGhleSBhcmUgb3JpZ2luYWxseSBmcm9tIFBlcnUgYW5kIGFyZSByZWxhdGVkIHRvIHRvbWF0aWxsb3MgYW5kIGh1c2svZ3JvdW5kIGNoZXJyaWVzLiBDYXBlIEdvb3NlYmVycmllcyBncm93IHdlbGwgd2l0aG91dCBmZXJ0aWxpemVyIGFuZCBpbiBzYW5keSB0byBwb29yIHNvaWxzLCBidXQgdGhleSBuZWVkIHRvIGJlIHByb3RlY3RlZCBmcm9tIHdpbmQuIFRoZSBmcnVpdCBpcyBzd2VldCB3aXRoIGEgbWlsZGx5IHRhcnQgZmxhdm9yLCB0YXN0ZXMgYSBiaXQgbGlrZSBwaW5lYXBwbGUsIGFuZCBjYW4gYmUgZWF0ZW4gcmF3LCBtYWRlIGludG8gamFtcywgb3IgYmFrZWQgaW50byBwaWVzLiBVbnJpcGUgZnJ1aXRzIGFyZSBwb2lzb25vdXMsIGhhcnZlc3Qgd2hlbiB0aGUgaHVzayBoYXMgbG9zdCBjb2xvciBhbmQgZHJpZWQgb3V0LiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtMS5zdGF0aWNmbGlja3IuY29tLzExMi8zMDI2MjMxNjdfMDI3MDgzZTU5NV96LmpwZyJ9LHsibmFtZSI6InNwZWFybWludCIsImRlc2NyaXB0aW9uIjoiU3BlYXJtaW50IGlzIGEgdmFyaWV0eSBvZiBtaW50IHRoYXQgaGFzIGEgbW9yZSBkZWxpY2F0ZSwgc3dlZXQgZmxhdm9yIHRoYW4gUGVwcGVybWludC4gTGlrZSBQZXBwZXJtaW50LCBTcGVhcm1pbnQgaXMgYSBwZXJlbm5pYWwgaGVyYiB3aXRoIHNxdWFyZS1zaGFwZWQgc3RlbXMgYW5kIHBpbmssIHB1cnBsZSwgb3Igd2hpdGUgZmxvd2Vycy4gTWludCBpcyBvZnRlbiBncm93biBpbiBwb3RzIHRvIHByZXZlbnQgaXQgZnJvbSBvdmVydGFraW5nIHRoZSBnYXJkZW4gd2l0aCBpdHMgaW52YXNpdmUsIHNwcmVhZGluZyByaGl6b21lIHJvb3Qgc3RydWN0dXJlLiBUaGUgbGVhdmVzIGFyZSBtb3N0IGFyb21hdGljIGJlZm9yZSB0aGUgcGxhbnQgZmxvd2VycyBhbmQgY2FuIGJlIHVzZWQgZnJlc2gsIGRyaWVkLCBvciBmcm96ZW4uIE1pbnQncyBzdHJvbmdseSBzY2VudGVkIGxlYXZlcyBjb25mdXNlIHRoZSBwZXN0cyBvZiBjYXJyb3RzLCB0b21hdG9lcywgYWxsaXVtcywgYW5kIGJyYXNzaWNhcywgYW5kIGRldGVyIGZsZWEgYmVldGxlcy4iLCJpbWFnZSI6Imh0dHBzOi8vZmFybTguc3RhdGljZmxpY2tyLmNvbS83MzgxLzk2MjE4Mjc1NTFfMGVlNzNmZWFiMl96LmpwZyJ9LHsibmFtZSI6ImJydXNzZWxzIHNwcm91dHMiLCJkZXNjcmlwdGlvbiI6IkJydXNzZWxzIHNwcm91dHMgZ3JvdyBvbiB0aGUgc2lkZXMgb2Ygc3RhbGtzIHVwIHRvIDkxY20gdGFsbC4gVGhlIHN0YWxrcyBhcmUgY292ZXJlZCB3aXRoIGxlYXZlcyBhbmQgdGhlIHNwcm91dHMgbG9vayBsaWtlIG1pbmlhdHVyZSBjYWJiYWdlcy4gVGhleSBhcmUgYSBjb29sIHdlYXRoZXIgY3JvcCBhbmQgYXJlIGRlbGljaW91cyByb2FzdGVkLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNS5zdGF0aWNmbGlja3IuY29tLzQzMjAvMzU4NDE0MDA2OTBfZGMwYTE3NGEyOV96LmpwZyJ9LHsibmFtZSI6ImJheSBsYXVyZWwiLCJkZXNjcmlwdGlvbiI6IkJheSBMYXVyZWwgaXMgYW4gYXJvbWF0aWMgZXZlcmdyZWVuIHRyZWUgb3IgbGFyZ2Ugc2hydWIgbmF0aXZlIHRvIHRoZSBNZWRpdGVycmFuZWFuLiBJdCBjYW4gYmUgZ3Jvd24gaW4gc29pbCBvciBpbiBjb250YWluZXJzLiBJdCBoYXMgZ2xvc3N5IGRhcmsgZ3JlZW4gbGVhdmVzLCBcbnllbGxvdyBmbG93ZXJzLCBhbmQgZGFyayBwdXJwbGlzaC1ibGFjayBmcnVpdHMuIFRoZSBwbGFudCdzIGxlYXZlcyBhcmUgdXNlZCBhcyBzZWFzb25pbmcgaW4gY29va2luZyBhbmQgYXJlIGJlc3QgaGFydmVzdGVkIGluIHRoZSBtb3JuaW5nIHdoZW4gdGhlIGZyYWdyYW5jZSBvaWxzIGFyZSBzdHJvbmdlc3QuIEJheSBMYXVyZWwgY2FuIGFsc28gYmUgZ3Jvd24gYXMgYW4gb3JuYW1lbnRhbCBvciB0b3BpYXJ5LiBQbGFudCB0cmVlcyBpbiBhbiBhcmVhIHdoZXJlIHRoZXkgYXJlIHByb3RlY3RlZCBmcm9tIHdpbmQgdG8gcHJldmVudCBjb2xkIHdpbnRlciB3aW5kcyBmcm9tIGRhbWFnaW5nIGZvbGlhZ2UuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vMzMxLzE4NjI3MTY1NzA4XzIwYjYyNzRiNzlfei5qcGcifSx7Im5hbWUiOiJsZXR0dWNlIGxlYWYgYmFzaWwiLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm02Ni5zdGF0aWNmbGlja3IuY29tLzY1NTM1LzQ5NDU2OTI4NjcyXzAxZmZkMzZkNDdfei5qcGcifSx7Im5hbWUiOiJhbG9lIHZlcmEiLCJkZXNjcmlwdGlvbiI6IkFsb2UgVmVyYSBpcyBhbiBldmVyZ3JlZW4gc3VjY3VsZW50IHdpdGggdGhpY2ssIGZsZXNoeSBsZWF2ZXMgd2l0aCBzZXJyYXRlZCBlZGdlcy4gSXQgY2FuIGJlIGdyb3duIG91dGRvb3JzIGluIFVTREEgUGxhbnQgSGFyZGluZXNzIFpvbmVzIDktMTEgb3IgaW5kb29ycyBhbnl3aGVyZS4gTGlrZSBhbGwgc3VjY3VsZW50cywgQWxvZSBWZXJhIGRvZXMgYmVzdCB3aXRoIGJyaWdodCBsaWdodCBhbmQgaW4gYXJpZCBjb25kaXRpb25zLiBBbG9lIGlzIG9mdGVuIGdyb3duIGZvciBvcm5hbWVudGFsIGFuZCBtZWRpY2luYWwgdXNlczogdGhlIGp1aWNlIGZyb20gaXQncyBsZWF2ZXMgaXMgZnJlcXVlbnRseSBhcHBsaWVkIHRvIHN1bmJ1cm5zIGFuZCBvdGhlciB3b3VuZHMuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU5MzlkMWM1MDFmODc5MDAwNDAwMDAwMC5qcGc/MTQ5Njk2MTQ3NCJ9LHsibmFtZSI6ImJlZWZzdGVhayB0b21hdG8iLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm0zLnN0YXRpY2ZsaWNrci5jb20vMjg4Mi8zMzM0ODIwNTkzNl8yNjFhOTY0Yzc2X3ouanBnIn0seyJuYW1lIjoicG9ydG9iZWxsbyIsImRlc2NyaXB0aW9uIjoiUG9ydG9iZWxsbyBtdXNocm9vbXMgYXJlIHRoZSBtYXR1cmUgdmVyc2lvbiBvZiB3aGl0ZSBidXR0b24gbXVzaHJvb21zLiBUaGV5IGhhdmUgYSBtZWF0eSBmbGF2b3IgYW5kIGFyZSBkZWxpY2lvdXMgZ3JpbGxlZCwgc2F1dMOpZWQsIHN0dWZmZWQsIGFuZCBpbiBzb3VwcyBhbmQgc3RpciBmcnlzLiBUbyBncm93IFBvcnRvYmVsbG9zLCB5b3Ugd2lsbCBuZWVkIHBvcnRvYmVsbG8gc3BvcmVzIGFuZCBwYXJ0aWFsbHkgZGVjb21wb3NlZCBjb21wb3N0IGFuZCBwZWF0IG1vc3MuIFRoZXkgY2FuIGJlIGdyb3duIG91dHNpZGUgb3IgaW5kb29ycy4gUG9ydG9iZWxsb3MgY2FuIGJlIGdyb3duIGluZG9vcnMgeWVhci1yb3VuZCBiZWNhdXNlIHRlbXBlcmF0dXJlLCBtb2lzdHVyZSwgYW5kIGxpZ2h0IGNhbiBiZSBjb250cm9sbGVkLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtOS5zdGF0aWNmbGlja3IuY29tLzgzNDIvODE4MDU3ODc0OV82MjA2NDY0YzQ3X3ouanBnIn0seyJuYW1lIjoicGx1bSIsImRlc2NyaXB0aW9uIjoiVGhlIHBsdW0gaXMgYSBmcnVpdCBvZiB0aGUgc3ViZ2VudXMgUHJ1bnVzIG9mIHRoZSBnZW51cyBQcnVudXMuIFRoZSBQcnVudXMgZ2VudXMgYWxzbyBpbmNsdWRlcyB0aGUgY2hlcnJ5LCBhcHJpY290LCBhbG1vbmQsIGFuZCBwZWFjaC4gV2l0aGluIHRoZSBzdWJnZW51cyBQcnVudXMsIHRoZXJlIGFyZSBtYW55IHNwZWNpZXMuIFRoZSB0d28gbGFyZ2VzdCBzcGVjaWVzIGdyb3VwcyBhcmUgRXVyb3BlYW4gUGx1bXMgKFBydW51cyBkb21lc3RpY2EpIGFuZCBKYXBhbmVzZSBQbHVtcyAoUHJ1bnVzIHNhbGljaW5hKS4gQXByaWNvdHMgYXJlIGFsc28gY2xhc3NpZmllZCBhcyBhIHNlY3Rpb24gb2YgdGhlIFBydW51cyBzdWJnZW51cy4gVGhlIHNraW4gb2YgcGx1bXMgY2FuIGJlIGNvYXRlZCB3aXRoIGEgd2F4eSBibG9vbSBvciBpdCBjYW4gYmUgc2hpbnkuIFBsdW1zIGNhbiBiZSBwdXJwbGUsIGdyZWVuLCB5ZWxsb3csIG9yIHJlZC4gU2hhcGUgdmFyaWVzIGZyb20gb3ZhbCB0byBnbG9idWxhci4gUGx1bXMgY2FuIGJlIGRyaWVkIHRvIG1ha2UgcHJ1bmVzLiBFdXJvcGVhbiBQbHVtcyByZXF1aXJlIDgwMC05MDAgaG91cnMgb2YgY2hpbGxpbmcgZHVyaW5nIHRoZSB3aW50ZXIsIEphcGFuZXNlIFBsdW1zIHJlcXVpcmUgMzAwLTUwMC4gU29tZSB2YXJpZXRpZXMgYXJlIHNlbGYtcG9sbGluYXRpbmcsIGJ1dCBhbGwgcGx1bSB0cmVlcyBiZW5lZml0IGZyb20gYSBwb2xsaW5hdGlvbiBwYXJ0bmVyIHdpdGggdGhlIHNhbWUgYmxvb20gdGltZSB3aXRoaW4gMTUgbWV0ZXJzLiBTdGFuZGFyZCBhbmQgZHdhcmYgcm9vdHN0b2NrcyBhcmUgYXZhaWxhYmxlLiBEd2FyZiB0cmVlcyBjYW4gZ3JvdyB0byAzIG1ldGVycywgc3RhbmRhcmQgdG8gNC41IG1ldGVycy4gRGVwZW5kaW5nIG9uIHRoZSBzaXplIGNob3NlbiwgdGhlIHRyZWUgd2lsbCBiZWFyIGZydWl0IHdpdGhpbiAzLTYgeWVhcnMgb2YgcGxhbnRpbmcuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU0YjRhZjZjNjEzMDY1MDAwMjA2MDAwMC5qcGc/MTQyMTEyNzUyOSJ9LHsibmFtZSI6InJhc3BiZXJyeSIsImRlc2NyaXB0aW9uIjoiUmFzcGJlcnJpZXMgYXJlIGEgcGVyZW5uaWFsIHBsYW50IHdpdGggZXJlY3QgdG8gdHJhaWxpbmcgY2FuZXMgdGhhdCBvZnRlbiBoYXZlIHNwaW5lcyBvciB0aG9ybnMuIFRoZSBwbGFudHMgcHJvZHVjZSBmcnVpdCBpbiB0aGVpciBzZWNvbmQgeWVhciBvZiBncm93dGgsIGJ1dCBzb21lIFwicHJpbW9jYW5lXCIgdmFyaWV0aWVzIGV4aXN0IHRoYXQgZmxvd2VyIGFuZCBmcnVpdCB0aGVpciBmaXJzdCB5ZWFyLiBDYW5lcyBhcmUgbGlnaHQgZ3JlZW4gdG8gYmx1ZSBpbiBodWUgd2l0aCBhbHRlcm5hdGUsIGNvbXBvdW5kIGxlYXZlcy4gRnJ1aXRzIGFyZSBzd2VldCwgbWFueS1zZWVkZWQsIGFuZCBob2xsb3cuIiwiaW1hZ2UiOiJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vb3BlbmZhcm0tcHJvamVjdC9wcm9kdWN0aW9uL21lZGlhL3BpY3R1cmVzL2F0dGFjaG1lbnRzLzU3NmI4ZmE4ZmU4ZDc1MDAwMzAwMDQzZi5qcGc/MTQ2NjY2NjkxOCJ9LHsibmFtZSI6InJlZCBsZXR0dWNlIiwiZGVzY3JpcHRpb24iOm51bGwsImltYWdlIjoiaHR0cHM6Ly9mYXJtOC5zdGF0aWNmbGlja3IuY29tLzc5MjMvNDY3Njc1MTYzNTRfMjcxNDdhMDgzYV96LmpwZyJ9LHsibmFtZSI6IndpbGQgbWludCIsImRlc2NyaXB0aW9uIjpudWxsLCJpbWFnZSI6Imh0dHBzOi8vZmFybTMuc3RhdGljZmxpY2tyLmNvbS8yMDQ2LzIwNTkwMDczMTZfZjJjZGZlMDYwYl96LmpwZyJ9LHsibmFtZSI6InBlYWNoIiwiZGVzY3JpcHRpb24iOiJUaGUgcGVhY2ggdHJlZSBpcyBhIGRlY2lkdW91cyB0cmVlIG5hdGl2ZSB0byBOb3J0aHdlc3QgQ2hpbmEgdGhhdCBwcm9kdWNlcyBzdG9uZSwgb3IgZHJ1cGUsIGZydWl0cy4gSXQgYmVsb25ncyB0byB0aGUgZ2VudXMgUHJ1bnVzIHdoaWNoIGluY2x1ZGVzIHRoZSBjaGVycnksIGFwcmljb3QsIGFsbW9uZCwgYW5kIHBsdW0uIFRoZSBwZWFjaCBpcyBjbGFzc2lmaWVkIHdpdGggdGhlIGFsbW9uZCBpbiB0aGUgc3ViZ2VudXMgQW15Z2RhbHVzIGJlY2F1c2UgdGhlaXIgc3RvbmVzIGFyZSBjb3JydWdhdGVkIHJhdGhlciB0aGFuIHNtb290aC4gUGVhY2hlcyBhbmQgbmVjdGFyaW5lcyBhcmUgdGhlIHNhbWUgc3BlY2llcyAtIG5lY3RhcmluZXMgaGF2ZSBhIHJlY2Vzc2l2ZSBnZW5lIHRoYXQgbWFrZXMgdGhlaXIgc2tpbiBzbW9vdGggcmF0aGVyIHRoYW4gZnV6enkuIEN1bHRpdmF0ZWQgcGVhY2hlcyBhcmUgZGl2aWRlZCBpbnRvIHR3byBncm91cHM6IGNsaW5nc3RvbmVzIGFuZCBmcmVlc3RvbmVzLCBkZXBlbmRpbmcgb24gd2hldGhlciB0aGUgZmxlc2ggc3RpY2tzIHRvIHRoZSBzdG9uZSBvciBub3QuIFBlYWNoZXMgY2FuIGhhdmUgd2hpdGUgb3IgeWVsbG93IGZ1enp5IHNraW4uIFllbGxvdyBwZWFjaGVzIHVzdWFsbHkgaGF2ZSBhbiBhY2lkaWMgdGFuZyBjb3VwbGVkIHdpdGggc3dlZXRuZXNzLiBXaGl0ZSBwZWFjaGVzIGFyZSB2ZXJ5IHN3ZWV0IHdpdGggbGl0dGxlIGFjaWRpdHkuIE1vc3QgY3VsdGl2YXJzIHJlcXVpcmUgNTAwIGhvdXJzIG9mIGNoaWxsaW5nIGFyb3VuZCAwIHRvIDEwIMKwQyBkdXJpbmcgdGhlIHdpbnRlciwgYW5kIGhvdCB0ZW1wZXJhdHVyZXMgaW4gdGhlIHN1bW1lciB0byByaXBlbiBmcnVpdC4gU29tZSB2YXJpZXRpZXMgYXJlIHNlbGYtcG9sbGluYXRpbmcsIHdoaWxlIG90aGVycyByZXF1aXJlIHBvbGxpbmF0aW9uIGJ5IGEgcGVhY2ggdHJlZSBvZiBhbm90aGVyIHZhcmlldHkgd2l0aCB0aGUgc2FtZSBibG9vbSBwZXJpb2Qgd2l0aGluIDUwIGZlZXQuIFBlYWNoZXMgc2hvdWxkIGJlIHRoaW5uZWQgdG8gNy0xMmNtIGFwYXJ0IHdoZW4gZnJ1aXQgYXJlIDItM2NtIGluIGRpYW1ldGVyIHRvIGluY3JlYXNlIG1hdHVyZSBmcnVpdCBzaXplLiBTdGFuZGFyZCBhbmQgZHdhcmYgcm9vdHN0b2NrcyBhcmUgYXZhaWxhYmxlLiBEd2FyZiB0cmVlcyBjYW4gZ3JvdyB0byAzIG1ldGVycywgc3RhbmRhcmQgdG8gNC41IG1ldGVycy4gRGVwZW5kaW5nIG9uIHRoZSBzaXplIGNob3NlbiwgdGhlIHRyZWUgd2lsbCBiZWFyIGZydWl0IHdpdGhpbiAyLTQgeWVhcnMgb2YgcGxhbnRpbmcuIiwiaW1hZ2UiOiJodHRwczovL2Zhcm01LnN0YXRpY2ZsaWNrci5jb20vNDE1Ni8zNDMwMTUwNDUwMV8zNmVhM2QzODIyX3ouanBnIn0seyJuYW1lIjoiZ2Vub3Zlc2UgYmFzaWwiLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm01LnN0YXRpY2ZsaWNrci5jb20vNDI3Ni8zNDk5NzAwOTA3Ml80YjE1OThmNmE5X3ouanBnIn0seyJuYW1lIjoiUm9tYSB0b21hdG8iLCJkZXNjcmlwdGlvbiI6bnVsbCwiaW1hZ2UiOiJodHRwczovL2Zhcm04LnN0YXRpY2ZsaWNrci5jb20vNzM5My85NDAzMzcyNjEyX2Y0YmNlM2U0OWFfei5qcGcifSx7Im5hbWUiOiJzY290cyBwb3RhdG8iLCJkZXNjcmlwdGlvbiI6IkFuIG9sZCBjdWx0aXZhciBzZW50IHRvIEtvYW5nYSBJbnN0aXR1dGUgYnkgYSBTY290c21hbiB3aG8gc2F5cyBpdCBjYW1lIEFvdGVhcm9hIE5ldyBaZWFsYW5kIHdpdGggaGlzIGZhbWlseSBmcm9tIHRoZSBob21lbGFuZC4gSXQgaXMgcGluay1za2lubmVkIGFuZCB3aGl0ZS1mbGVzaGVkLlxuXG5BbiBvbGQgY3VsdGl2YXIgc2VudCB0byB1cyBieSBhIFNjb3RzbWFuIHdobyBzYXlzIGl0IGNhbWUgdG8gdGhpcyBsYW5kIHdpdGggaXMgZmFtaWx5IGZyb20gdGhlIGhvbWVsYW5kLiBUaGV5IGFyZSByb3VuZCB3aXRoIHNoYWxsb3cgZXllcywgcGluay1za2lubmVkLCB3aGl0ZS1mbGVzaGVkIGFuZCBoYXMgYSBkZWxpY2lvdXMgZmxhdm91ciBhbmQgdGV4dHVyZSwgdGFzdHkgYW5kIG1lYWx5IHdoZW4gYm9pbGVkLi4uLi4uLiBhbHNvIFRoaXMgcG90YXRvIGNvbWVzIGZyb20gSGVucnkgSGFycmluZ3RvbuKAmXMgZWFybHkgbGlmZSBhcm91bmQgQWthcm9hLCBhcyBhIGRlc2NlbmRhbnQgb2YgdGhlIGRlIE1hbG1hbmNoZSBGcmVuY2ggc2V0dGxlcnMuIEl0IGlzIGEgbGFyZ2Ugcm9jay1saWtlIHBvdGF0byB3aXRoIGZldyBidXQgZGVlcCBleWVzIGFuZCBhIGxpZ2h0IHB1cnBsZS8gcGluayBibHVzaCB1bmRlciB0aGUgc2tpbi4gSXQgaXMgYSBmbHVmZnkgcG90YXRvLCBzbyBpdCBpcyBiZXN0IGJvaWxlZCwgb3IgbWFzaGVkLCBhbmQgaGFzIGEgZ29vZCBmbGF2b3VyLiIsImltYWdlIjoiaHR0cHM6Ly9mYXJtNjYuc3RhdGljZmxpY2tyLmNvbS82NTUzNS80OTYwMzQ5MDYxNl83N2UxNDI0NmYzX3ouanBnIn0seyJuYW1lIjoiZ3JhcGVmcnVpdCIsImRlc2NyaXB0aW9uIjoiVGhlIEdyYXBlZnJ1aXQgaXMgc3VidHJvcGljYWwgY2l0cnVzIHRyZWUgdGhhdCBwcm9kdWNlcyBjbHVzdGVycyBvZiBsYXJnZSwgcm91bmQsIHNvdXIgdG8gc2VtaS1zd2VldCBmcnVpdC4gSXQgaXMgYSBoeWJyaWQgY3Jvc3MgYmV0d2VlbiB0aGUgc3dlZXQgb3JhbmdlIGFuZCBwb21lbG8gdGhhdCBvcmlnaW5hdGVkIGluIEJhcmJhZG9zLiBJdCBpcyBmcmVxdWVudGx5IGNvbmZ1c2VkIHdpdGggdGhlIHBvbWVsbyBhbmQgd2FzIG9ubHkgYm90YW5pY2FsbHkgZGlzdGluZ3Vpc2hlZCBmcm9tIGl0IGluIHRoZSAxODMwcy4gVGhlIHRyZWUgY2FuIGdyb3cgdXAgdG8gNyBtZXRlcnMgdGFsbCwgYW5kIGhhcyBhIHJvdW5kZWQgY2Fub3B5IG9mIG92YXRlLCBnbG9zc3ksIGRhcmsgZ3JlZW4sIGV2ZXJncmVlbiBsZWF2ZXMuIENlcnRhaW4gdmFyaWV0aWVzIGNhbiBiZSBwcmlja2x5IG9yIHRob3JueS4gR3JhcGVmcnVpdHMgaGF2ZSBtYWxlIGFuZCBmZW1hbGUgZmxvd2VycyBvbiBhIHNpbmdsZSB0cmVlIGFuZCBhcmUgc2VsZi1wb2xsaW5hdGluZy4gRnJ1aXQgYXJlIDEwLTE1Y20gaW4gZGlhbWV0ZXIgd2l0aCB5ZWxsb3cgdG8gb3JhbmdlIHNraW4uIFRoZSBqdWljeSBmbGVzaCBpcyBzZWdtZW50ZWQgYW5kIGNhbiBiZSB3aGl0ZSwgcGluaywgb3IgcmVkLCB3aXRoIHJlZGRlciB2YXJpZXRpZXMgYmVpbmcgdGhlIHN3ZWV0ZXN0LiBCZWNhdXNlIHRoZXkgYXJlIHN1YnRyb3BpY2FsLCBncmFwZWZydWl0cyByZXF1aXJlIHJlbGF0aXZlbHkgd2FybSB0ZW1wZXJhdHVyZXMgYmV0d2VlbiAxNS41IGFuZCAyOcKwQy4gRnJ1aXQgdGFrZXMgbG9uZ2VyIHRvIG1hdHVyZSBhbmQgaXMgbW9yZSBhY2lkaWMgaW4gYXJlYXMgd2l0aCBjb29sZXIgdGVtcGVyYXR1cmVzLiBUcmVlcyBjYW4gc3Vydml2ZSB0ZW1wZXJhdHVyZXMgYXMgbG93IGFzIC0zwrBDLCBidXQgZG8gbm90IHJlcXVpcmUgYSB3aW50ZXIgY2hpbGxpbmcgcGVyaW9kLiBHcmFwZWZydWl0IGFyZSBtb3N0IGNvbW1vbmx5IHByb3BhZ2F0ZWQgYnkgcGxhbnRpbmcgYSBncmFmdGVkIGN1bHRpdmFyLiBGcnVpdCBzZXQgc2hvdWxkIGJlIHJlbW92ZWQgdGhlIGZpcnN0IHR3byB5ZWFycyB0byBjaGFubmVsIHRoZSB0cmVlJ3MgZW5lcmd5IGludG8gZ3Jvd3RoIHJhdGhlciB0aGFuIGZydWl0IHByb2R1Y3Rpb24uIEluIHRoZSB0aGlyZCB5ZWFyLCBsZWF2ZSBmcnVpdHMgb24gdGhlIHRyZWUsIHRoaW5uaW5nIGFzIG5lY2Vzc2FyeSB0byBpbXByb3ZlIGhhcnZlc3QuIFRyZWVzIGdyb3duIGZyb20gc2VlZCBhcmUgdXN1YWxseSwgYnV0IG5vdCBhbHdheXMsIHRydWUgdG8gdGhlaXIgcGFyZW50IHRyZWUncyBjaGFyYWN0ZXJpc3RpY3MsIGFuZCB3aWxsIHRha2UgdXAgdG8gMTAgeWVhcnMgdG8gYmVhciBmcnVpdC4gRnJ1aXRzIGFyZSByZWFkeSBmb3IgaGFydmVzdCBvbmNlIHRoZXkgaGF2ZSB0dXJuZWQgZ29sZGVuIG9yIHllbGxvdy4gVGhleSB3aWxsIGJlY29tZSBsYXJnZXIgYW5kIHN3ZWV0ZXIgdGhlIGxvbmdlciB0aGV5IHJlbWFpbiBvbiB0aGUgdHJlZS4gSWYgdGhlIGZydWl0IGFwcGVhcnMgbHVtcHksIGl0IGlzIG92ZXJyaXBlIGFuZCBzaG91bGQgbm90IGJlIGVhdGVuLiBDb250YWluZXIgcGxhbnRpbmcgaXMgbm90IGlkZWFsLCBidXQgY2FuIGJlIGRvbmUgd2l0aCBkd2FyZiB2YXJpZXRpZXMuIFBsYW50cyBzaG91bGQgYmUgbW92ZWQgb3V0c2lkZSBkdXJpbmcgdGhlIHN1bW1lciBmb3Igb3B0aW1hbCBncm93dGguIiwiaW1hZ2UiOiJodHRwczovL2Zhcm0xLnN0YXRpY2ZsaWNrci5jb20vNTU4LzIwMjYxNDcwMDYwX2IwMDk5MTFiY2Jfei5qcGcifSx7Im5hbWUiOiJvcmFuZ2UiLCJkZXNjcmlwdGlvbiI6IlRoZSBPcmFuZ2UgaXMgYSB0cm9waWNhbCBldmVyZ3JlZW4gdHJlZSB0aGF0IHByb2R1Y2VzIHJvdW5kIG9yYW5nZSBmcnVpdHMsIGFsc28ga25vd24gYXMgXCJPcmFuZ2VzLlwiIE1hbnkgc3BlY2llcyBhcmUgc2VsZi1wb2xsaW5hdGluZywgYnV0IGhhdmluZyBtdWx0aXBsZSB0cmVlcyBmb3IgY3Jvc3MgcG9sbGluYXRpb24gY2FuIGltcHJvdmUgZnJ1aXQgc2l6ZS4gVHJlZXMgbmVlZCB0ZW1wZXJhdHVyZXMgYmV0d2VlbiAyMS0zMsKwIEMgdG8gZ3JvdyBwcm9wZXJseSBhbmQgcHJvZHVjZSBmcnVpdC4gT3JhbmdlcyBjYW4gdXN1YWxseSB3aXRoc3RhbmQgd2ludGVyIHRlbXBlcmF0dXJlcyBkb3duIHRvIC02LjHCsCBDIHdpdGhvdXQgZXhwZXJpZW5jaW5nIGRhbWFnZSB0byB0aGVpciBsZWF2ZXMgb3IgdHJ1bmsuIFRyZWVzIHdpbGwgYmVhciBmcnVpdCAyLTMgeWVhcnMgYWZ0ZXIgdHJhbnNwbGFudGluZy44IiwiaW1hZ2UiOiJodHRwczovL2Zhcm00LnN0YXRpY2ZsaWNrci5jb20vMzY5Mi85NDM4MDY1MjEwXzU2YTFkNjUyNjdfei5qcGcifV0=
    http_version: null
  recorded_at: Mon, 13 Apr 2020 21:50:25 GMT
recorded_with: VCR 5.1.0
